const { test, expect } = require('@playwright/test');
const { loginUser } = require('./helpers/auth');
const { addVenue, addProduct } = require('./helpers/modals');

test.describe('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤ –∏ –∏—Ç–æ–≥–æ–≤', () => {
  
  test.beforeEach(async ({ page }) => {
    await page.goto('/');
    await loginUser(page);
    
    // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    await setupTestData(page);
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –æ—Ç—á–µ—Ç–∞–º
    await page.click('[data-screen="reports"]');
    await page.waitForSelector('#reports-screen', { state: 'visible' });
    await expect(page.locator('#reports-screen')).toBeVisible();
  });

  async function setupTestData(page) {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    await page.click('[data-screen="settings"]');
    await page.waitForSelector('#settings-screen', { state: 'visible' });
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ (–µ—Å–ª–∏ –Ω–µ—Ç)
    const testVenue = {
      name: '–¢–µ—Å—Ç–æ–≤–æ–µ –ó–∞–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –û—Ç—á–µ—Ç–æ–≤',
      address: '—É–ª. –û—Ç—á–µ—Ç–Ω–∞—è, 1'
    };
    
    await addVenue(page, testVenue);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–∑–∏—Ü–∏–∏ (–µ—Å–ª–∏ –Ω–µ—Ç)
    const products = [
      {
        name: '–¢–µ—Å—Ç–æ–≤—ã–π –ö–æ—Ñ–µ',
        price: 120,
        commissionType: 'fixed',
        commissionValue: 20
      },
      {
        name: '–¢–µ—Å—Ç–æ–≤—ã–π –î–µ—Å–µ—Ä—Ç',
        price: 250,
        commissionType: 'percent',
        commissionValue: 12
      }
    ];
    
    for (const product of products) {
      await addProduct(page, product);
    }
    
    await page.waitForTimeout(1000);
  }

  test.describe('–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤ –º–µ—Å—è—Ü–∞', () => {
    
    test('–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç—á–µ—Ç–æ–≤', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —ç–∫—Ä–∞–Ω–∞ –æ—Ç—á–µ—Ç–æ–≤');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–µ–∫—Ü–∏–π
      await expect(page.locator('h2:has-text("–ò—Ç–æ–≥–∏")')).toBeVisible();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ –º–µ—Å—è—Ü–∞–º –≤ –æ—Ç—á–µ—Ç–∞—Ö
      await expect(page.locator('#reports-prev-month')).toBeVisible();
      await expect(page.locator('#reports-current-month')).toBeVisible();
      await expect(page.locator('#reports-next-month')).toBeVisible();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ü–∏–∏ –æ—Ç—á–µ—Ç–æ–≤
      await expect(page.locator('h3:has-text("–ü—Ä–æ–¥–∞–∂–∏")')).toBeVisible();
      await expect(page.locator('h3:has-text("–§–∏–Ω–∞–Ω—Å—ã")')).toBeVisible();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è
      await expect(page.locator('#total-revenue')).toBeVisible();
      await expect(page.locator('#total-payout')).toBeVisible();
      await expect(page.locator('#total-tips')).toBeVisible();
      await expect(page.locator('#gross-earnings')).toBeVisible();
      await expect(page.locator('#net-earnings')).toBeVisible();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—è –≤–≤–æ–¥–∞
      await expect(page.locator('#bonus-input')).toBeVisible();
      await expect(page.locator('#payment-date')).toBeVisible();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É —ç–∫—Å–ø–æ—Ä—Ç–∞
      await expect(page.locator('#export-btn')).toBeVisible();
    });

    test('–ù–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏—Ç–æ–≥–æ–≤', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –ù–∞—á–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è');
      
      // –ü—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Å–º–µ–Ω –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å 0
      const totalRevenue = await page.locator('#total-revenue').textContent();
      const totalPayout = await page.locator('#total-payout').textContent();
      const totalTips = await page.locator('#total-tips').textContent();
      const grossEarnings = await page.locator('#gross-earnings').textContent();
      const netEarnings = await page.locator('#net-earnings').textContent();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç—ã)
      expect(totalRevenue).toMatch(/‚ÇΩ|—Ä—É–±|\$|‚Ç¨/);
      expect(totalPayout).toMatch(/‚ÇΩ|—Ä—É–±|\$|‚Ç¨/);
      expect(totalTips).toMatch(/‚ÇΩ|—Ä—É–±|\$|‚Ç¨/);
      expect(grossEarnings).toMatch(/‚ÇΩ|—Ä—É–±|\$|‚Ç¨/);
      expect(netEarnings).toMatch(/‚ÇΩ|—Ä—É–±|\$|‚Ç¨/);
    });

    test('–ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ—Å—è—Ü–∞–º –≤ –æ—Ç—á–µ—Ç–∞—Ö', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ—Å—è—Ü–∞–º –≤ –æ—Ç—á–µ—Ç–∞—Ö');
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
      const currentMonth = await page.locator('#reports-current-month').textContent();
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É –º–µ—Å—è—Ü—É
      await page.click('#reports-prev-month');
      await page.waitForTimeout(1000);
      
      const prevMonth = await page.locator('#reports-current-month').textContent();
      expect(prevMonth).not.toBe(currentMonth);
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –º–µ—Å—è—Ü—É
      await page.click('#reports-next-month');
      await page.waitForTimeout(1000);
      
      const nextMonth = await page.locator('#reports-current-month').textContent();
      expect(nextMonth).toBe(currentMonth);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é —Å –∂—É—Ä–Ω–∞–ª–æ–º —Å–º–µ–Ω
      await page.click('[data-screen="shifts"]');
      await page.waitForSelector('#shifts-screen', { state: 'visible' });
      
      const shiftsMonth = await page.locator('#current-month').textContent();
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Ç—á–µ—Ç–∞–º
      await page.click('[data-screen="reports"]');
      await page.waitForSelector('#reports-screen', { state: 'visible' });
      
      const reportsMonth = await page.locator('#reports-current-month').textContent();
      
      // –ú–µ—Å—è—Ü—ã –¥–æ–ª–∂–Ω—ã —Å–æ–≤–ø–∞–¥–∞—Ç—å (–∏–ª–∏ –±—ã—Ç—å –≤ —Ä–∞–∑—É–º–Ω—ã—Ö –ø—Ä–µ–¥–µ–ª–∞—Ö)
      expect(reportsMonth).toBeTruthy();
      expect(shiftsMonth).toBeTruthy();
    });
  });

  test.describe('–†–∞—Å—á–µ—Ç –ø—Ä–µ–º–∏–∏ –∏ —á–∏—Å—Ç–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞', () => {
    
    test('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–º–∏–∏', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–º–∏–∏');
      
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ (–≥—Ä–æ—Å—Å)
      const grossEarnings = await page.locator('#gross-earnings').textContent();
      const grossValue = parseFloat(grossEarnings.replace(/[^\d.-]/g, '')) || 0;
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–º–∏—é
      const bonusAmount = 5000;
      await page.fill('#bonus-input', bonusAmount.toString());
      
      // –ñ–¥–µ–º –ø–µ—Ä–µ—Å—á–µ—Ç–∞
      await page.waitForTimeout(1000);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—á–µ—Ç —á–∏—Å—Ç–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞
      const netEarnings = await page.locator('#net-earnings').textContent();
      const netValue = parseFloat(netEarnings.replace(/[^\d.-]/g, '')) || 0;
      
      // –ß–∏—Å—Ç—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ –¥–æ–ª–∂–µ–Ω —Ä–∞–≤–Ω—è—Ç—å—Å—è –≥—Ä–æ—Å—Å + –ø—Ä–µ–º–∏—è
      const expectedNet = grossValue + bonusAmount;
      expect(Math.abs(netValue - expectedNet)).toBeLessThan(1); // –¥–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –≤ 1 —Ä—É–±–ª—å
    });

    test('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ–º–∏–∏', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–µ–º–∏–∏');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø—Ä–µ–º–∏—é
      await page.fill('#bonus-input', '3000');
      await page.waitForTimeout(500);
      
      const firstNetEarnings = await page.locator('#net-earnings').textContent();
      const firstNetValue = parseFloat(firstNetEarnings.replace(/[^\d.-]/g, '')) || 0;
      
      // –ò–∑–º–µ–Ω—è–µ–º –ø—Ä–µ–º–∏—é
      await page.fill('#bonus-input', '7000');
      await page.waitForTimeout(500);
      
      const secondNetEarnings = await page.locator('#net-earnings').textContent();
      const secondNetValue = parseFloat(secondNetEarnings.replace(/[^\d.-]/g, '')) || 0;
      
      // –†–∞–∑–Ω–∏—Ü–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ—Å—Ç–∞–≤–ª—è—Ç—å 4000 (7000 - 3000)
      const difference = secondNetValue - firstNetValue;
      expect(Math.abs(difference - 4000)).toBeLessThan(1);
    });

    test('–û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–º–∏–∏', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–º–∏–∏');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–º–∏—é
      await page.fill('#bonus-input', '2000');
      await page.waitForTimeout(500);
      
      // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø—Ä–µ–º–∏–∏
      await page.fill('#bonus-input', '');
      await page.waitForTimeout(500);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–∏—Å—Ç—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫ —Ä–∞–≤–µ–Ω –≥—Ä–æ—Å—Å –∑–∞—Ä–∞–±–æ—Ç–∫—É
      const grossEarnings = await page.locator('#gross-earnings').textContent();
      const netEarnings = await page.locator('#net-earnings').textContent();
      
      const grossValue = parseFloat(grossEarnings.replace(/[^\d.-]/g, '')) || 0;
      const netValue = parseFloat(netEarnings.replace(/[^\d.-]/g, '')) || 0;
      
      expect(Math.abs(netValue - grossValue)).toBeLessThan(1);
    });

    test('–í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–µ–º–∏–∏', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–µ–º–∏–∏');
      
      // –ü—ã—Ç–∞–µ–º—Å—è –≤–≤–µ—Å—Ç–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–µ–º–∏—é
      await page.fill('#bonus-input', '-1000');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML5 –≤–∞–ª–∏–¥–∞—Ü–∏—é
      const bonusInput = page.locator('#bonus-input');
      
      // –ü–æ–ª–µ –¥–æ–ª–∂–Ω–æ –∏–º–µ—Ç—å –∞—Ç—Ä–∏–±—É—Ç min="0"
      const minAttribute = await bonusInput.getAttribute('min');
      expect(minAttribute).toBe('0');
      
      // –ú–æ–∂–µ–º —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      await page.waitForTimeout(500);
      const inputValue = await bonusInput.inputValue();
      expect(parseInt(inputValue) >= 0 || inputValue === '').toBeTruthy();
    });
  });

  test.describe('–î–∞—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—Ä–ø–ª–∞—Ç—ã', () => {
    
    test('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω–∏—è', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω–∏—è');
      
      const paymentDate = '2024-01-15';
      await page.fill('#payment-date', paymentDate);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
      await expect(page.locator('#payment-date')).toHaveValue(paymentDate);
    });

    test('–í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–µ –∏–º–µ–µ—Ç —Ç–∏–ø date
      const dateInput = page.locator('#payment-date');
      await expect(dateInput).toHaveAttribute('type', 'date');
      
      // –ü—ã—Ç–∞–µ–º—Å—è –≤–≤–µ—Å—Ç–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É (—ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –±—Ä–∞—É–∑–µ—Ä–æ–º)
      await page.fill('#payment-date', 'invalid-date');
      
      // HTML5 –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –≤–≤–æ–¥ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
      const inputValue = await dateInput.inputValue();
      expect(inputValue).toMatch(/^\d{4}-\d{2}-\d{2}$|^$/); // YYYY-MM-DD –∏–ª–∏ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
    });
  });

  test.describe('–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö', () => {
    
    test('–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö');
      
      // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
      const downloadPromise = page.waitForEvent('download');
      
      // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É —ç–∫—Å–ø–æ—Ä—Ç–∞
      await page.click('#export-btn');
      
      // –ñ–¥–µ–º –Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∑–∫–∏ (—Å —Ç–∞–π–º–∞—É—Ç–æ–º)
      try {
        const download = await downloadPromise;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–∫–∞—á–∏–≤–∞–µ—Ç—Å—è
        expect(download).toBeTruthy();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è —Ñ–∞–π–ª–∞ (–¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–∞—Ç—É –∏–ª–∏ –±—ã—Ç—å –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ)
        const filename = download.suggestedFilename();
        expect(filename).toMatch(/\.json$/i); // –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å JSON —Ñ–∞–π–ª
        
        console.log(`‚úÖ –§–∞–π–ª —ç–∫—Å–ø–æ—Ä—Ç–∞: ${filename}`);
        
      } catch (error) {
        // –ï—Å–ª–∏ —ç–∫—Å–ø–æ—Ä—Ç –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ-–¥—Ä—É–≥–æ–º—É, –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã
        console.log('‚ö†Ô∏è –ü—Ä—è–º–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–æ–∑–º–æ–∂–Ω–æ –ª–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞ –∏–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        const pageContent = await page.content();
        
        // –ò–ª–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ö–æ—Ç—è –±—ã –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å—Å—è
        // (–Ω–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—à–∏–±–æ–∫ JavaScript)
        const consoleErrors = [];
        page.on('console', msg => {
          if (msg.type() === 'error') {
            consoleErrors.push(msg.text());
          }
        });
        
        await page.waitForTimeout(2000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ –±—ã–ª–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
        const criticalErrors = consoleErrors.filter(error => 
          error.includes('export') || error.includes('download')
        );
        expect(criticalErrors.length).toBe(0);
      }
    });

    test('–≠–∫—Å–ø–æ—Ä—Ç —Å –¥–∞–Ω–Ω—ã–º–∏', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –≠–∫—Å–ø–æ—Ä—Ç —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏');
      
      // –°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é —Å–º–µ–Ω—É –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
      await page.click('[data-screen="shifts"]');
      await page.waitForSelector('#shifts-screen', { state: 'visible' });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç—É—é —Å–º–µ–Ω—É (–≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å –¥–ª—è –±—ã—Å—Ç—Ä–æ—Ç—ã)
      await page.click('#add-shift-btn');
      await page.waitForSelector('#shift-modal', { state: 'visible' });
      
      const currentDate = new Date().toISOString().split('T')[0];
      await page.fill('#shift-date', currentDate);
      await page.check('input[name="workday"][value="off"]');
      await page.click('#shift-form button[type="submit"]');
      
      await page.waitForSelector('#shift-modal.hidden', { timeout: 5000 });
      await page.waitForTimeout(1000);
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Ç—á–µ—Ç–∞–º
      await page.click('[data-screen="reports"]');
      await page.waitForSelector('#reports-screen', { state: 'visible' });
      
      // –¢–µ–ø–µ—Ä—å –ø—ã—Ç–∞–µ–º—Å—è —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å
      const downloadPromise = page.waitForEvent('download');
      
      await page.click('#export-btn');
      
      try {
        const download = await downloadPromise;
        expect(download).toBeTruthy();
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        const path = await download.path();
        if (path) {
          console.log('‚úÖ –≠–∫—Å–ø–æ—Ä—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
        }
        
      } catch (error) {
        console.log('‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é —ç–∫—Å–ø–æ—Ä—Ç–∞');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ JavaScript –æ—à–∏–±–æ–∫
        await page.waitForTimeout(2000);
        // –ï—Å–ª–∏ –Ω–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫, —Å—á–∏—Ç–∞–µ–º —Ç–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–º
      }
    });
  });

  test.describe('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂', () => {
    
    test('–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–¥–∞–∂', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ–∫—Ü–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
      const salesStats = page.locator('#sales-stats');
      await expect(salesStats).toBeVisible();
      
      // –í –ø—É—Å—Ç–æ–º –º–µ—Å—è—Ü–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π
      const statsContent = await salesStats.textContent();
      
      if (statsContent && statsContent.trim() !== '') {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        console.log('üìä –ù–∞–π–¥–µ–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂:', statsContent);
      } else {
        console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –ø—É—Å—Ç–∞ (–æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)');
      }
    });

    test('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏ —Å–º–µ–Ω–µ –º–µ—Å—è—Ü–∞', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
      
      const salesStats = page.locator('#sales-stats');
      const initialContent = await salesStats.textContent();
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –¥—Ä—É–≥–æ–º—É –º–µ—Å—è—Ü—É
      await page.click('#reports-prev-month');
      await page.waitForTimeout(1000);
      
      const updatedContent = await salesStats.textContent();
      
      // –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–æ–∂–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å—Å—è –∏–ª–∏ –æ—Å—Ç–∞—Ç—å—Å—è –ø—É—Å—Ç—ã–º - –≥–ª–∞–≤–Ω–æ–µ, —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫
      expect(updatedContent).toBeDefined();
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –æ–±—Ä–∞—Ç–Ω–æ
      await page.click('#reports-next-month');
      await page.waitForTimeout(1000);
      
      const finalContent = await salesStats.textContent();
      expect(finalContent).toBe(initialContent);
    });
  });

  test.describe('–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ —ç–∫—Ä–∞–Ω–∞–º–∏', () => {
    
    test('–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏');
      
      // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∏—Ç–æ–≥–∏
      const initialRevenue = await page.locator('#total-revenue').textContent();
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∂—É—Ä–Ω–∞–ª –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–º–µ–Ω—É
      await page.click('[data-screen="shifts"]');
      await page.waitForSelector('#shifts-screen', { state: 'visible' });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã—Ö–æ–¥–Ω–æ–π (–ø—Ä–æ—Å—Ç–∞—è —Å–º–µ–Ω–∞)
      await page.click('#add-shift-btn');
      await page.waitForSelector('#shift-modal', { state: 'visible' });
      
      const currentDate = new Date().toISOString().split('T')[0];
      await page.fill('#shift-date', currentDate);
      await page.check('input[name="workday"][value="off"]');
      await page.click('#shift-form button[type="submit"]');
      
      await page.waitForSelector('#shift-modal.hidden', { timeout: 5000 });
      await page.waitForTimeout(2000);
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Ç—á–µ—Ç–∞–º
      await page.click('[data-screen="reports"]');
      await page.waitForSelector('#reports-screen', { state: 'visible' });
      
      // –î–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –æ–±–Ω–æ–≤–∏—Ç—å—Å—è (–∏–ª–∏ –æ—Å—Ç–∞—Ç—å—Å—è —Ç–µ–º–∏ –∂–µ –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –¥–Ω—è)
      const updatedRevenue = await page.locator('#total-revenue').textContent();
      expect(updatedRevenue).toBeDefined();
      
      console.log(`–í—ã—Ä—É—á–∫–∞ –¥–æ: ${initialRevenue}, –ø–æ—Å–ª–µ: ${updatedRevenue}`);
    });

    test('–ü–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–º–∏—é
      await page.fill('#bonus-input', '1500');
      const bonusValue = await page.locator('#bonus-input').inputValue();
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥—Ä—É–≥–æ–π —ç–∫—Ä–∞–Ω –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è
      await page.click('[data-screen="settings"]');
      await page.waitForSelector('#settings-screen', { state: 'visible' });
      
      await page.click('[data-screen="reports"]');
      await page.waitForSelector('#reports-screen', { state: 'visible' });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–µ–º–∏—è —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞—Å—å
      const restoredBonus = await page.locator('#bonus-input').inputValue();
      expect(restoredBonus).toBe(bonusValue);
    });
  });

  test.describe('–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å —ç–∫—Ä–∞–Ω–∞ –æ—Ç—á–µ—Ç–æ–≤', () => {
    
    test('–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω–æ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ', async ({ page }) => {
      console.log('üß™ –¢–µ—Å—Ç: –ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—Ç—á–µ—Ç–æ–≤');
      
      // –≠–º—É–ª–∏—Ä—É–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
      await page.setViewportSize({ width: 375, height: 667 });
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–∏–¥–Ω—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã
      await expect(page.locator('#reports-screen')).toBeVisible();
      await expect(page.locator('#total-revenue')).toBeVisible();
      await expect(page.locator('#bonus-input')).toBeVisible();
      await expect(page.locator('#export-btn')).toBeVisible();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—é—Ç—Å—è
      const reportsContainer = page.locator('.reports-content');
      const boundingBox = await reportsContainer.boundingBox();
      
      if (boundingBox) {
        expect(boundingBox.width).toBeLessThanOrEqual(375);
        expect(boundingBox.height).toBeGreaterThan(0);
      }
    });
  });
});