// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase - –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–®–ò –î–ê–ù–ù–´–ï
const SUPABASE_URL = 'https://ukuhwaulkvpqkwqbqqag.supabase.co'; // https://your-project-id.supabase.co
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVrdWh3YXVsa3ZwcWt3cWJxcWFnIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NDUzMDgsImV4cCI6MjA2NjQyMTMwOH0.dzSK4aP-QB8QjkZ_JrTc-DHEehLwce2Y2leK_VslBqY'; // –≤–∞—à anon –∫–ª—é—á –∏–∑ Settings > API

// –≠–ö–°–¢–†–ï–ù–ù–´–ï –§–£–ù–ö–¶–ò–ò –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò - —Å–æ–∑–¥–∞—é—Ç—Å—è —Å—Ä–∞–∑—É
console.log('üÜò –°–æ–∑–¥–∞–µ–º —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏...');

window.emergencyDiagnose = function() {
    console.log('=== –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ===');
    console.log('timestamp:', new Date().toISOString());
    console.log('window.supabase:', !!window.supabase);
    console.log('DOM readyState:', document.readyState);
    console.log('–ó–∞–≥—Ä—É–∑–∫–∞ —ç–∫—Ä–∞–Ω hidden:', document.getElementById('loading-screen')?.classList.contains('hidden'));
    console.log('–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ hidden:', document.getElementById('main-app')?.classList.contains('hidden'));
    console.log('–≠–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ hidden:', document.getElementById('auth-screen')?.classList.contains('hidden'));
    console.log('–ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã:', {
        currentUser: typeof window.currentUser !== 'undefined',
        isInitializing: typeof window.isInitializing !== 'undefined',
        isInitialized: typeof window.isInitialized !== 'undefined'
    });
};

window.emergencyReload = function() {
    console.log('=== –≠–ö–°–¢–†–ï–ù–ù–ê–Ø –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê ===');
    // –û—á–∏—â–∞–µ–º –í–°–ï –∫—ç—à–∏
    localStorage.clear();
    sessionStorage.clear();
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å –æ—á–∏—Å—Ç–∫–æ–π –∫—ç—à–∞
    window.location.reload(true);
};

window.emergencyHideLoading = function() {
    console.log('=== –≠–ö–°–¢–†–ï–ù–ù–û–ï –°–ö–†–´–¢–ò–ï –ó–ê–ì–†–£–ó–ö–ò ===');
    const loading = document.getElementById('loading-screen');
    if (loading) {
        loading.classList.add('hidden');
        loading.style.display = 'none';
    }
    const mainApp = document.getElementById('main-app');
    if (mainApp) {
        mainApp.classList.remove('hidden');
    }
};

// –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å—Ä–∞–∑—É (–¥—É–±–ª–∏–∫–∞—Ç—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö)
window.checkAppState = function() {
    console.log('=== –ë–ê–ó–û–í–û–ï –°–û–°–¢–û–Ø–ù–ò–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===');
    console.log('timestamp:', new Date().toISOString());
    console.log('currentUser –æ–ø—Ä–µ–¥–µ–ª–µ–Ω:', typeof window.currentUser !== 'undefined');
    console.log('isInitializing –æ–ø—Ä–µ–¥–µ–ª–µ–Ω:', typeof window.isInitializing !== 'undefined');
    console.log('isInitialized –æ–ø—Ä–µ–¥–µ–ª–µ–Ω:', typeof window.isInitialized !== 'undefined');
    try {
        console.log('Loading screen hidden:', document.getElementById('loading-screen')?.classList.contains('hidden'));
        console.log('Main app hidden:', document.getElementById('main-app')?.classList.contains('hidden'));
        console.log('Auth screen hidden:', document.getElementById('auth-screen')?.classList.contains('hidden'));
    } catch (e) {
        console.log('DOM —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:', e.message);
    }
};

window.forceInitialize = function() {
    console.log('=== –ë–ê–ó–û–í–ê–Ø –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===');
    if (typeof window.isInitializing !== 'undefined') {
        window.isInitializing = false;
    }
    if (typeof window.isInitialized !== 'undefined') {
        window.isInitialized = false;
    }
    if (typeof window.initializeApp === 'function') {
        window.initializeApp().catch(e => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥. –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', e));
    } else {
        console.log('initializeApp –µ—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞');
    }
};

console.log('‚úÖ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã: emergencyDiagnose(), emergencyReload(), emergencyHideLoading()');
console.log('‚úÖ –ë–∞–∑–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã: checkAppState(), forceInitialize()');

// PWA –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨
let deferredPrompt;
let installButton;

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è beforeinstallprompt
window.addEventListener('beforeinstallprompt', (e) => {
    console.log('üíæ PWA: –°–æ–±—ã—Ç–∏–µ beforeinstallprompt –ø–æ–ª—É—á–µ–Ω–æ');
    
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
    e.preventDefault();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    deferredPrompt = e;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    showInstallButton();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA
window.addEventListener('appinstalled', (e) => {
    console.log('üéâ PWA: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    hideInstallButton();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
    deferredPrompt = null;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    showMessage('–£—Å–ø–µ—à–Ω–æ!', '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ');
});

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
function showInstallButton() {
    const installBtn = document.getElementById('install-btn');
    if (installBtn) {
        installBtn.style.display = 'flex';
        console.log('‚úÖ PWA: –ö–Ω–æ–ø–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ–∫–∞–∑–∞–Ω–∞');
    }
}

// –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
function hideInstallButton() {
    const installBtn = document.getElementById('install-btn');
    if (installBtn) {
        installBtn.style.display = 'none';
        console.log('‚úÖ PWA: –ö–Ω–æ–ø–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∫—Ä—ã—Ç–∞');
    }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
function showUpdateButton() {
    const updateBtn = document.getElementById('update-btn');
    if (updateBtn) {
        updateBtn.style.display = 'flex';
        console.log('‚úÖ PWA: –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∫–∞–∑–∞–Ω–∞');
    }
}

// –§—É–Ω–∫—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
function hideUpdateButton() {
    const updateBtn = document.getElementById('update-btn');
    if (updateBtn) {
        updateBtn.style.display = 'none';
        console.log('‚úÖ PWA: –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–∫—Ä—ã—Ç–∞');
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏
async function handleInstallClick() {
    console.log('üîÑ PWA: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏');
    
    if (!deferredPrompt) {
        console.log('‚ö†Ô∏è PWA: –°–æ–±—ã—Ç–∏–µ beforeinstallprompt –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
        showMessage('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∏–ª–∏ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º');
        return;
    }
    
    try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        deferredPrompt.prompt();
        
        // –û–∂–∏–¥–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const { outcome } = await deferredPrompt.userChoice;
        
        console.log(`üì± PWA: –í—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${outcome}`);
        
        if (outcome === 'accepted') {
            console.log('‚úÖ PWA: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–Ω—è–ª —É—Å—Ç–∞–Ω–æ–≤–∫—É');
        } else {
            console.log('‚ùå PWA: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª —É—Å—Ç–∞–Ω–æ–≤–∫—É');
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ
        deferredPrompt = null;
        
        // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        hideInstallButton();
        
    } catch (error) {
        console.error('‚ùå PWA: –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ:', error);
        showMessage('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
    }
}

// –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
async function handleUpdateClick() {
    console.log('üîÑ PWA: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
    
    try {
        // –û–±–Ω–æ–≤–ª—è–µ–º Service Worker
        if ('serviceWorker' in navigator) {
            const registration = await navigator.serviceWorker.getRegistration();
            if (registration) {
                console.log('üîÑ PWA: –û–±–Ω–æ–≤–ª—è—é Service Worker...');
                await registration.update();
                
                // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
                window.location.reload();
            } else {
                console.log('‚ö†Ô∏è PWA: Service Worker –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
                window.location.reload();
            }
        } else {
            console.log('‚ö†Ô∏è PWA: Service Worker –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É');
            window.location.reload();
        }
        
    } catch (error) {
        console.error('‚ùå PWA: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:', error);
        showMessage('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
    }
}

// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker
async function registerServiceWorker() {
    if ('serviceWorker' in navigator) {
        try {
            console.log('üîÑ PWA: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker...');
            
            const registration = await navigator.serviceWorker.register('/sw.js', {
                scope: '/'
            });
            
            console.log('‚úÖ PWA: Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', registration.scope);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            registration.addEventListener('updatefound', () => {
                console.log('üîÑ PWA: –ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Service Worker');
                
                const newWorker = registration.installing;
                newWorker.addEventListener('statechange', () => {
                    if (newWorker.state === 'installed') {
                        if (navigator.serviceWorker.controller) {
                            console.log('üîÑ PWA: –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞');
                            showMessage('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ', '–î–æ—Å—Ç—É–ø–Ω–∞ –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
                        }
                    }
                });
            });
            
        } catch (error) {
            console.error('‚ùå PWA: –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker:', error);
        }
    } else {
        console.log('‚ö†Ô∏è PWA: Service Worker –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ –∏ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
async function clearAllCachesAndReload() {
    console.log('üîÑ –ù–∞—á–∏–Ω–∞—é –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –∫—ç—à–∞...');
    
    try {
        // –û—á–∏—â–∞–µ–º –≤—Å–µ –∫—ç—à–∏
        if ('caches' in window) {
            const cacheNames = await caches.keys();
            console.log('–ù–∞–π–¥–µ–Ω–æ –∫—ç—à–µ–π:', cacheNames.length);
            
            for (const cacheName of cacheNames) {
                console.log(`–£–¥–∞–ª—è—é –∫—ç—à: ${cacheName}`);
                await caches.delete(cacheName);
            }
        }
        
        // –£–¥–∞–ª—è–µ–º –≤—Å–µ Service Workers
        if ('serviceWorker' in navigator) {
            const registrations = await navigator.serviceWorker.getRegistrations();
            console.log('–ù–∞–π–¥–µ–Ω–æ Service Workers:', registrations.length);
            
            for (const registration of registrations) {
                console.log('–£–¥–∞–ª—è—é Service Worker:', registration.scope);
                await registration.unregister();
            }
        }
        
        // –û—á–∏—â–∞–µ–º localStorage
        localStorage.clear();
        sessionStorage.clear();
        
        console.log('‚úÖ –ö—ç—à –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω');
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
        window.location.reload(true);
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫—ç—à–∞:', error);
        // –í—Å–µ —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º
        window.location.reload(true);
    }
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ–π –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ HTML
window.clearAllCachesAndReload = clearAllCachesAndReload;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Supabase
async function ensureSupabaseLoaded() {
    if (window.supabase) {
        console.log('‚úÖ PWA: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Supabase —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞');
        return true;
    }
    
    console.log('üîÑ PWA: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Supabase –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    
    // –ï—Å–ª–∏ Supabase –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à
    showMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏', '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Supabase –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
    return false;
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ PWA
function initializePWA() {
    console.log('üöÄ PWA: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PWA —Ñ—É–Ω–∫—Ü–∏–π...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches) {
        console.log('üì± PWA: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ standalone —Ä–µ–∂–∏–º–µ');
        hideInstallButton();
        showUpdateButton();
        
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–ª—è PWA —Ä–µ–∂–∏–º–∞
        setTimeout(() => {
            testSupabaseConnectionInPWA();
        }, 2000);
    } else {
        console.log('üåê PWA: –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
        hideUpdateButton();
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —à–æ—Ä—Ç–∫–∞—Ç–æ–≤
    handlePWAShortcuts();
    
    // –í–†–ï–ú–ï–ù–ù–û –û–¢–ö–õ–Æ–ß–ï–ù Service Worker –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–≥—Ä—É–∑–∫–æ–π
    // setTimeout(() => {
    //     registerServiceWorker();
    // }, 3000);
    
    console.log('‚ö†Ô∏è PWA: Service Worker –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è PWA —à–æ—Ä—Ç–∫–∞—Ç–æ–≤
function handlePWAShortcuts() {
    const urlParams = new URLSearchParams(window.location.search);
    const action = urlParams.get('action');
    const screen = urlParams.get('screen');
    
    if (action === 'add-shift') {
        console.log('üî• PWA: –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–æ—Ä—Ç–∫–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–º–µ–Ω—ã');
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        window.pwaShortcutAction = 'add-shift';
    }
    
    if (screen) {
        console.log(`üî• PWA: –û–±—Ä–∞–±–æ—Ç–∫–∞ —à–æ—Ä—Ç–∫–∞—Ç–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω: ${screen}`);
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        window.pwaShortcutScreen = screen;
    }
}

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö PWA –¥–µ–π—Å—Ç–≤–∏–π
function executePWAShortcuts() {
    if (window.pwaShortcutAction === 'add-shift') {
        console.log('üî• PWA: –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–º–µ–Ω—ã');
        setTimeout(() => {
            const addShiftBtn = document.getElementById('add-shift-btn');
            if (addShiftBtn) {
                addShiftBtn.click();
            }
        }, 1000);
        window.pwaShortcutAction = null;
    }
    
    if (window.pwaShortcutScreen) {
        console.log(`üî• PWA: –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω: ${window.pwaShortcutScreen}`);
        setTimeout(() => {
            switchScreen(window.pwaShortcutScreen);
        }, 500);
        window.pwaShortcutScreen = null;
    }
}

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase –≤ PWA —Ä–µ–∂–∏–º–µ
async function testSupabaseConnectionInPWA() {
    console.log('üîç PWA: –¢–µ—Å—Ç–∏—Ä—É—é –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...');
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –ª–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ Supabase
        if (!window.supabase) {
            console.warn('‚ö†Ô∏è PWA: –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Supabase –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –ø—ã—Ç–∞—é—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å...');
            
            const loaded = await ensureSupabaseLoaded();
            if (!loaded) {
                showMessage('–û—à–∏–±–∫–∞ PWA', '–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ Supabase –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
                return;
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–Ω –ª–∏ –∫–ª–∏–µ–Ω—Ç Supabase
        if (!supabase) {
            console.warn('‚ö†Ô∏è PWA: –ö–ª–∏–µ–Ω—Ç Supabase –Ω–µ —Å–æ–∑–¥–∞–Ω, –ø—ã—Ç–∞—é—Å—å —Å–æ–∑–¥–∞—Ç—å...');
            
            try {
                supabase = window.supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {
                    auth: {
                        autoRefreshToken: true,
                        persistSession: true,
                        detectSessionInUrl: true,
                        flowType: 'pkce'
                    }
                });
                console.log('‚úÖ PWA: –ö–ª–∏–µ–Ω—Ç Supabase —Å–æ–∑–¥–∞–Ω');
            } catch (createError) {
                console.error('‚ùå PWA: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Supabase:', createError);
                showMessage('–û—à–∏–±–∫–∞ PWA', '–ù–µ —É–¥–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç Supabase. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
                return;
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase
        const { data, error } = await supabase.from('venues').select('count', { count: 'exact' });
        
        if (error) {
            console.error('‚ùå PWA: –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase:', error);
            showMessage('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è', '–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
            return;
        }
        
        console.log('‚úÖ PWA: –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå PWA: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Supabase:', error);
        showMessage('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞', '–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.');
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é PWA
initializePWA();

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Supabase
console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Supabase:', {
    windowSupabase: !!window.supabase,
    windowSupabaseType: typeof window.supabase
});

// –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–´–ô –¢–ê–ô–ú–ê–£–¢ –î–õ–Ø –°–ö–†–´–¢–ò–Ø –ó–ê–ì–†–£–ó–ö–ò
setTimeout(() => {
    console.log('üö® –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –°–ö–†–´–¢–ò–ï –ó–ê–ì–†–£–ó–ö–ò –ß–ï–†–ï–ó 15 –°–ï–ö–£–ù–î');
    const loadingScreen = document.getElementById('loading-screen');
    if (loadingScreen && !loadingScreen.classList.contains('hidden')) {
        console.log('üîß –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ –µ—â–µ –≤–∏–¥–Ω–∞ - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º');
        loadingScreen.classList.add('hidden');
        
        const authScreen = document.getElementById('auth-screen');
        const mainApp = document.getElementById('main-app');
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        if (window.currentUser) {
            console.log('üë§ –ï—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
            authScreen?.classList.add('hidden');
            mainApp?.classList.remove('hidden');
        } else {
            console.log('üë§ –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
            authScreen?.classList.remove('hidden');
            mainApp?.classList.add('hidden');
        }
        
        console.log('‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Å–∫—Ä—ã—Ç–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ');
    }
}, 15000);

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
let supabase = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Supabase —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
async function initSupabaseClient() {
    const maxRetries = 3;
    const retryDelay = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞
    
    for (let attempt = 1; attempt <= maxRetries; attempt++) {
        try {
            console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxRetries} —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Supabase...`);
            
            if (window.supabase) {
                supabase = window.supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {
                    auth: {
                        autoRefreshToken: true,
                        persistSession: true,
                        detectSessionInUrl: true,
                        flowType: 'pkce',
                        refreshThreshold: 5400,
                        storage: window.localStorage,
                        storageKey: 'sb-auth-token'
                    },
                    global: {
                        headers: {
                            'X-Client-Info': 'shiftlog-app'
                        }
                    },
                    realtime: {
                        params: {
                            eventsPerSecond: 10
                        }
                    }
                });
                
                console.log('‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ');
                return supabase;
            }
            
            console.log(`‚ö†Ô∏è window.supabase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxRetries}`);
            
            if (attempt < maxRetries) {
                await new Promise(resolve => setTimeout(resolve, retryDelay));
            }
            
        } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Supabase –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, error);
            
            if (attempt < maxRetries) {
                await new Promise(resolve => setTimeout(resolve, retryDelay));
            }
        }
    }
    
    // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç Supabase –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫');
    return null;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
if (window.supabase) {
    supabase = window.supabase.createClient(SUPABASE_URL, SUPABASE_ANON_KEY, {
        auth: {
            autoRefreshToken: true,
            persistSession: true,
            detectSessionInUrl: true,
            flowType: 'pkce',
            refreshThreshold: 5400,
            storage: window.localStorage,
            storageKey: 'sb-auth-token'
        },
        global: {
            headers: {
                'X-Client-Info': 'shiftlog-app'
            }
        },
        realtime: {
            params: {
                eventsPerSecond: 10
            }
        }
    });
}

console.log('–ö–ª–∏–µ–Ω—Ç Supabase —Å–æ–∑–¥–∞–Ω:', {
    supabaseExists: !!supabase,
    supabaseType: typeof supabase
});

console.log('üöÄ –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞ main.js (–ù–û–í–ê–Ø –í–ï–†–°–ò–Ø)');

// –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –ü–û–°–õ–ï –ó–ê–ì–†–£–ó–ö–ò
setTimeout(async () => {
    console.log('üîê –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò...');
    try {
        const { data: session, error } = await supabase.auth.getSession();
        console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏:', { session: !!session?.session, error });
        
        if (session?.session && !currentUser) {
            console.log('üîÑ –ù–∞–π–¥–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è, –Ω–æ currentUser = null. –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º...');
            currentUser = session.session.user;
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö
            if (!isInitialized && !isInitializing) {
                console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
                await initializeApp();
            }
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
    }
}, 3000);

// –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò –ß–ï–†–ï–ó 5 –°–ï–ö–£–ù–î
setTimeout(async () => {
    console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø –ß–ï–†–ï–ó 5 –°–ï–ö–£–ù–î...');
    console.log('–§–ª–∞–≥–∏:', { isInitialized, isInitializing, currentUser: !!currentUser });
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è
    if (!currentUser && !isInitializing) {
        console.log('‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω. –ü—Ä–æ–±—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å...');
        try {
            const { data: session } = await supabase.auth.getSession();
            if (session?.session?.user) {
                console.log('üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º...');
                await window.restoreAuth();
            } else {
                console.log('‚ùå –°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.');
                hideLoading();
                showAuthScreen();
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Å—Å–∏–∏:', error);
            hideLoading();
            showAuthScreen();
        }
    }
}, 5000);

// –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ó–ê–©–ò–¢–ê –ù–ê –°–õ–£–ß–ê–ô –ó–ê–í–ò–°–ê–ù–ò–Ø
setTimeout(() => {
    console.log('üö® –†–ï–ó–ï–†–í–ù–ê–Ø –ó–ê–©–ò–¢–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É —á–µ—Ä–µ–∑ 8 —Å–µ–∫—É–Ω–¥');
    const loadingScreen = document.getElementById('loading-screen');
    if (loadingScreen && !loadingScreen.classList.contains('hidden')) {
        console.log('‚ö†Ô∏è –†–ï–ó–ï–†–í–ù–ê–Ø –ó–ê–©–ò–¢–ê –°–†–ê–ë–û–¢–ê–õ–ê - —Å–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É');
        loadingScreen.classList.add('hidden');
        
        if (window.currentUser) {
            document.getElementById('main-app')?.classList.remove('hidden');
            document.getElementById('auth-screen')?.classList.add('hidden');
        } else {
            document.getElementById('auth-screen')?.classList.remove('hidden');
            document.getElementById('main-app')?.classList.add('hidden');
        }
    }
}, 8000);

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let currentUser = null;
let currentMonth = new Date();
console.log('üóìÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è currentMonth:', currentMonth.toLocaleDateString('ru-RU', { month: 'long', year: 'numeric' }));
let venues = [];
let products = [];
let shifts = [];
let currency = '‚ÇΩ';
let editingShift = null;
let editingVenue = null;
let editingProduct = null;

// –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
let isInitializing = false;
let isInitialized = false;

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–µ–π
let sessionCheckInterval = null;
let sessionExpirationTime = null;
let lastActivityTime = null;
let isUserActive = true;
const SESSION_DURATION = 2 * 60 * 60 * 1000; // 2 —á–∞—Å–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
const IDLE_TIMEOUT = 60 * 1000; // 1 –º–∏–Ω—É—Ç–∞ –ø—Ä–æ—Å—Ç–æ—è
const SESSION_CHECK_INTERVAL = 30 * 1000; // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
const ACTIVITY_EVENTS = ['mousedown', 'mousemove', 'keypress', 'scroll', 'touchstart', 'click', 'focus'];

// –î–æ–±–∞–≤–ª—è–µ–º CSS-—Å—Ç–∏–ª–∏ –¥–ª—è –ø–æ–ª–µ–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤
if (!document.getElementById('product-fields-styles')) {
    const style = document.createElement('style');
    style.id = 'product-fields-styles';
    style.textContent = `
        .product-input-group {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 5px;
        }
        
        .product-input-group input {
            flex: 1;
            min-width: 80px;
        }
        
        .product-sum {
            min-width: 80px;
            padding: 8px 12px;
            background: #f3f4f6;
            border: 1px solid #d1d5db;
            border-radius: 4px;
            text-align: right;
            font-weight: 500;
            color: #374151;
            font-size: 14px;
        }
        
        .product-sum.has-value {
            background: #d1fae5;
            border-color: #10b981;
            color: #059669;
            font-weight: 600;
        }
    `;
    document.head.appendChild(style);
}

// –î–æ–±–∞–≤–ª—è–µ–º CSS-—Å—Ç–∏–ª–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ —Å–º–µ–Ω
if (!document.getElementById('shift-cards-styles')) {
    const style = document.createElement('style');
    style.id = 'shift-cards-styles';
    style.textContent = `
        .shift-card {
            background: white;
            border: 1px solid #e5e7eb;
            border-radius: 8px;
            margin-bottom: 12px;
            padding: 16px;
            cursor: pointer;
            transition: all 0.2s ease;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        }
        
        .shift-card:hover {
            border-color: #3b82f6;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            transform: translateY(-1px);
        }
        
        .shift-card.holiday {
            background: #fef3c7;
            border-color: #f59e0b;
        }
        
        .shift-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 12px;
            flex-wrap: wrap;
            gap: 12px;
        }
        
        .shift-date {
            display: flex;
            flex-direction: column;
            align-items: center;
            min-width: 60px;
        }
        
        .date-day {
            font-size: 18px;
            font-weight: 600;
            color: #1f2937;
            line-height: 1;
        }
        
        .date-month {
            font-size: 12px;
            color: #6b7280;
            text-transform: uppercase;
            margin-top: 2px;
        }
        
        .shift-venue {
            flex: 1;
            font-size: 16px;
            font-weight: 500;
            color: #374151;
            margin: 0 16px;
            min-width: 120px;
        }
        
        .shift-amounts {
            display: flex;
            gap: 16px;
            flex-wrap: wrap;
        }
        
        .amount-item {
            display: flex;
            flex-direction: column;
            align-items: flex-end;
            min-width: 80px;
        }
        
        .amount-label {
            font-size: 12px;
            color: #6b7280;
            margin-bottom: 2px;
        }
        
        .amount-value {
            font-size: 16px;
            font-weight: 600;
            color: #1f2937;
        }
        
        .shift-products {
            border-top: 1px solid #e5e7eb;
            padding-top: 12px;
            margin-top: 12px;
        }
        
        .products-header {
            font-size: 14px;
            font-weight: 600;
            color: #374151;
            margin-bottom: 8px;
        }
        
        .product-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 6px 0;
            border-bottom: 1px solid #f3f4f6;
        }
        
        .product-item:last-child {
            border-bottom: none;
        }
        
        .product-name {
            font-size: 14px;
            color: #374151;
            flex: 1;
        }
        
        .product-details {
            font-size: 14px;
            color: #6b7280;
            font-family: monospace;
            font-weight: 500;
        }
        
        .shifts-container {
            padding: 0;
        }
        
        .shifts-list {
            padding: 0;
            margin: 0;
        }
        
        /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */
        @media (max-width: 768px) {
            .shift-header {
                flex-direction: column;
                align-items: stretch;
            }
            
            .shift-date {
                flex-direction: row;
                justify-content: flex-start;
                align-items: center;
                gap: 8px;
            }
            
            .shift-venue {
                margin: 8px 0;
                text-align: left;
            }
            
            .shift-amounts {
                justify-content: space-between;
            }
            
            .amount-item {
                align-items: flex-start;
            }
        }
    `;
    document.head.appendChild(style);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è v2.2.0 - –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ï–°–ö–û–ù–ï–ß–ù–û–ô –ó–ê–ì–†–£–ó–ö–ò
console.log('üöÄ –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞ app.js v2.2.0 - –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ë–ï–°–ö–û–ù–ï–ß–ù–û–ô –ó–ê–ì–†–£–ó–ö–ò');
console.log('üïê Timestamp –∑–∞–≥—Ä—É–∑–∫–∏:', new Date().toISOString());
console.log('üåê –°—Ä–µ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', {
    host: window.location.host,
    protocol: window.location.protocol,
    userAgent: navigator.userAgent.substring(0, 100),
    isLocalhost: window.location.hostname === 'localhost',
    timestamp: new Date().toISOString()
});

console.log('üîß –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏:');
console.log('  ‚Ä¢ diagnoseConnection() - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase');
console.log('  ‚Ä¢ testUserAuth() - —Ç–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
console.log('  ‚Ä¢ retryDataLoad() - –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö');
console.log('  ‚Ä¢ refreshUserData() - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö');
console.log('  ‚Ä¢ debugCurrentUser() - –æ—Ç–ª–∞–¥–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
console.log('  ‚Ä¢ testShiftProducts() - —Ç–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å–º–µ–Ω—ã');
console.log('  ‚Ä¢ checkAppState() - –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
console.log('  ‚Ä¢ forceInitialize() - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
console.log('  ‚Ä¢ forceReload() - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');

function initApp() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞—á–∞—Ç–∞');
    console.log('üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π:', {
        supabaseExists: !!supabase,
        currentUser: currentUser,
        documentReady: document.readyState,
        isInitializing: isInitializing,
        isInitialized: isInitialized
    });
    
    try {
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
        console.log('üîÑ –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞...');
        closeAllModals();
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã');
        
        console.log('üîÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ initializeApp...');
        console.log('   DOM –≥–æ—Ç–æ–≤:', document.readyState);
        console.log('   supabase –∫–ª–∏–µ–Ω—Ç:', !!supabase);
        console.log('   isInitializing:', isInitializing);
        console.log('   isInitialized:', isInitialized);
        
        console.log('üîÑ –ó–∞–ø—É—Å–∫ initializeApp...');
        const initPromise = initializeApp();
        console.log('üìù initializeApp Promise —Å–æ–∑–¥–∞–Ω');
        
        initPromise.then(() => {
            console.log('‚úÖ initializeApp –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        }).catch(error => {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ initializeApp:', error);
            hideLoading();
            showMessage('–û—à–∏–±–∫–∞', '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: ' + error.message);
        });
        
        console.log('‚úÖ initApp –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –æ–∂–∏–¥–∞–µ–º initializeApp');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ initApp:', error);
        hideLoading();
        showMessage('–û—à–∏–±–∫–∞', '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ' + error.message);
    }
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
const initTimeout = setTimeout(() => {
    console.error('‚è∞ –¢–∞–π–º–∞—É—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏! –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å');
    hideLoading();
    showAuthScreen();
    showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–Ω—è–ª–∞ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –í–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.');
}, 10000); // 10 —Å–µ–∫—É–Ω–¥

function initAppWithTimeout() {
    clearTimeout(initTimeout);
    initApp();
}

if (document.readyState === 'loading') {
    console.log('DOM –µ—â–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –∂–¥–µ–º DOMContentLoaded');
    document.addEventListener('DOMContentLoaded', initAppWithTimeout);
} else {
    console.log('DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');
    initAppWithTimeout();
}

async function initializeApp() {
    console.log('üîß initializeApp –∑–∞–ø—É—â–µ–Ω–∞ - START');
    console.log('üìä –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', {
        isInitializing: isInitializing,
        isInitialized: isInitialized,
        supabaseExists: !!supabase,
        timestamp: new Date().toISOString()
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–¥–µ—Ç –ª–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    if (isInitializing) {
        console.log('‚ö†Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∂–µ –∏–¥–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤');
        return;
    }
    
    if (isInitialized) {
        console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
        return;
    }
    
    isInitializing = true;
    console.log('üîí –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ - isInitializing = true');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Supabase –∫–ª–∏–µ–Ω—Ç–∞
    console.log('üîç –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º Supabase –∫–ª–∏–µ–Ω—Ç...');
    if (!supabase) {
        console.log('‚ö†Ô∏è Supabase –∫–ª–∏–µ–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å...');
        
        // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ
        supabase = await initSupabaseClient();
        
        if (!supabase) {
            console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç Supabase');
            hideLoading();
            showMessage('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
            showAuthScreen();
            isInitializing = false;
            return;
        }
    }

    console.log('‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç –¥–æ—Å—Ç—É–ø–µ–Ω');
    console.log('üîç –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏—é...');
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
        console.log('üîç –®–∞–≥ 3: –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –∏–∑ Supabase...');
        const sessionResult = await supabase.auth.getSession();
        console.log('üìù –°—ã—Ä–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç getSession:', sessionResult);
        
        const { data: { session } } = sessionResult;
        console.log('üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è:', { session: !!session, userId: session?.user?.id });
        
        if (session) {
            console.log('üîç –®–∞–≥ 4: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º...');
            currentUser = session.user;
            console.log('‚úÖ currentUser —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', currentUser.id);
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Å—Å–∏–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            console.log('üîç –®–∞–≥ 5: –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Å—Å–∏–∏...');
            startSessionCheck();
            console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏ –∑–∞–ø—É—â–µ–Ω–∞');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º
            console.log('üîç –®–∞–≥ 6: –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
            const loadTimeout = setTimeout(() => {
                console.error('‚è∞ –¢–ê–ô–ú–ê–£–¢! –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–Ω—è–ª–∞ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏');
                hideLoading();
                showMainApp();
                showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–Ω—è–ª–∞ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.');
            }, 30000); // 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
            
            try {
                console.log('üîç –®–∞–≥ 7: –í—ã–∑—ã–≤–∞–µ–º loadUserData()...');
                await loadUserData();
                console.log('‚úÖ loadUserData() –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
                showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ.');
            } finally {
                clearTimeout(loadTimeout);
                console.log('üîç –®–∞–≥ 8: –û—á–∏—â–µ–Ω —Ç–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏');
            }
            
            // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            console.log('üîç –®–∞–≥ 9: –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
            hideLoading();
            showMainApp();
            console.log('‚úÖ –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ');
            
        } else {
            console.log('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
            console.log('üîç –®–∞–≥ 4alt: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
            // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            hideLoading();
            showAuthScreen();
            console.log('‚úÖ –≠–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–∫–∞–∑–∞–Ω');
        }

        console.log('üîç –®–∞–≥ 10: –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π...');
        setupEventListeners();
        console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
        
        console.log('üîç –®–∞–≥ 11: –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º auth listener...');
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º auth listener –ü–û–°–õ–ï –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        setupAuthStateListener();
        console.log('‚úÖ Auth listener –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
        
        console.log('üîç –®–∞–≥ 12: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º PWA...');
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º PWA –ü–û–°–õ–ï –æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        initializePWA();
        console.log('‚úÖ PWA –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        
        console.log('üîç –®–∞–≥ 13: –û—Ç–º–µ—á–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—É—é...');
        // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞
        isInitialized = true;
        console.log('‚úÖ isInitialized = true');
        console.log('üéâ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ü–û–õ–ù–û–°–¢–¨–Æ –ó–ê–í–ï–†–®–ï–ù–ê!');
        
    } catch (error) {
        console.error('‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        console.error('Stack trace:', error.stack);
        console.log('üîç –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ:', {
            isInitializing: isInitializing,
            isInitialized: isInitialized,
            currentUser: !!currentUser
        });
        hideLoading();
        showMessage('–û—à–∏–±–∫–∞', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ' + error.message);
        showAuthScreen();
    } finally {
        console.log('üîç Finally –±–ª–æ–∫: –°–±—Ä–∞—Å—ã–≤–∞–µ–º isInitializing...');
        isInitializing = false;
        console.log('‚úÖ isInitializing = false');
        console.log('üîç –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', {
            isInitializing: isInitializing,
            isInitialized: isInitialized,
            timestamp: new Date().toISOString()
        });
    }
}

// –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–µ–π
function startSessionCheck() {
    console.log('üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏ —Å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    lastActivityTime = Date.now();
    isUserActive = true;
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (sessionCheckInterval) {
        clearInterval(sessionCheckInterval);
    }
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    setupActivityTracking();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
    sessionCheckInterval = setInterval(checkSessionExpiration, SESSION_CHECK_INTERVAL);
}

function stopSessionCheck() {
    console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏');
    
    if (sessionCheckInterval) {
        clearInterval(sessionCheckInterval);
        sessionCheckInterval = null;
    }
    
    // –û—á–∏—â–∞–µ–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    removeActivityTracking();
    
    sessionExpirationTime = null;
    lastActivityTime = null;
    isUserActive = false;
}

async function checkSessionExpiration() {
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏
        const { data: { session } } = await supabase.auth.getSession();
        
        if (!session) {
            // –ï—Å–ª–∏ –Ω–µ—Ç —Å–µ—Å—Å–∏–∏, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω - –∑–Ω–∞—á–∏—Ç —Å–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞
            if (currentUser) {
                console.log('‚ö†Ô∏è –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                handleSessionExpired();
            } else {
                console.log('‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)');
                // –ù–µ –¥–µ–ª–∞–µ–º –Ω–∏—á–µ–≥–æ - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            }
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
        const tokenExpiresAt = session.expires_at * 1000; // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
        const now = Date.now();
        
        if (now >= tokenExpiresAt) {
            console.log('‚ö†Ô∏è –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
            handleSessionExpired();
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const timeSinceLastActivity = now - lastActivityTime;
        
        if (timeSinceLastActivity >= IDLE_TIMEOUT) {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω –±–æ–ª—å—à–µ –º–∏–Ω—É—Ç—ã
            if (isUserActive) {
                console.log('üò¥ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –∑–∞–ø—É—Å–∫–∞–µ–º –æ—Ç—Å—á–µ—Ç —Å–µ—Å—Å–∏–∏');
                isUserActive = false;
                sessionExpirationTime = now + SESSION_DURATION; // –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç—Å—á–µ—Ç —Å —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å—Ç–µ—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –æ—Ç—Å—á–µ—Ç–∞
            if (sessionExpirationTime && now >= sessionExpirationTime) {
                console.log('‚ö†Ô∏è –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞ –ø–æ—Å–ª–µ –ø—Ä–æ—Å—Ç–æ—è, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
                handleSessionExpired();
                return;
            }
            
            // –ï—Å–ª–∏ –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω—å—à–µ 5 –º–∏–Ω—É—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
            if (sessionExpirationTime) {
                const timeLeft = sessionExpirationTime - now;
                if (timeLeft > 0 && timeLeft < 5 * 60 * 1000) {
                    console.log('‚ö†Ô∏è –°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç');
                    showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–í–∞—à–∞ —Å–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.');
                }
            }
        } else {
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—Ç—Å—á–µ—Ç
            if (!isUserActive) {
                console.log('üéØ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–µ–Ω, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—Ç—Å—á–µ—Ç —Å–µ—Å—Å–∏–∏');
                isUserActive = true;
                sessionExpirationTime = null;
            }
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Å—Å–∏–∏:', error);
        handleSessionExpired();
    }
}

function handleSessionExpired() {
    console.log('üîê –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    const wasUserLoggedIn = currentUser !== null;
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Å—Å–∏–∏
    stopSessionCheck();
    
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    currentUser = null;
    venues = [];
    products = [];
    shifts = [];
    
    // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    if (supabase) {
        supabase.auth.signOut();
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    showAuthScreen();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    if (wasUserLoggedIn) {
        showMessage('–°–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞', '–í–∞—à–∞ —Å–µ—Å—Å–∏—è –∏—Å—Ç–µ–∫–ª–∞. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ.');
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function setupActivityTracking() {
    console.log('üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    ACTIVITY_EVENTS.forEach(eventName => {
        document.addEventListener(eventName, handleUserActivity, true);
    });
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å/–ø–æ—Ç–µ—Ä—é —Ñ–æ–∫—É—Å–∞ –æ–∫–Ω–∞
    window.addEventListener('focus', handleUserActivity);
    window.addEventListener('blur', handleUserInactive);
}

function removeActivityTracking() {
    console.log('üõë –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
    
    // –£–¥–∞–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    ACTIVITY_EVENTS.forEach(eventName => {
        document.removeEventListener(eventName, handleUserActivity, true);
    });
    
    window.removeEventListener('focus', handleUserActivity);
    window.removeEventListener('blur', handleUserInactive);
}

function handleUserActivity() {
    lastActivityTime = Date.now();
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –æ—Ç–º–µ—á–∞–µ–º –µ–≥–æ –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ
    if (!isUserActive) {
        console.log('üéØ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–µ–Ω');
        isUserActive = true;
        sessionExpirationTime = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—Ç—Å—á–µ—Ç —Å–µ—Å—Å–∏–∏
    }
}

function handleUserInactive() {
    console.log('üò¥ –û–∫–Ω–æ –ø–æ—Ç–µ—Ä—è–ª–æ —Ñ–æ–∫—É—Å');
    // –ù–µ –∏–∑–º–µ–Ω—è–µ–º lastActivityTime, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ç—Å—á–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
}

// –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å —ç–∫—Ä–∞–Ω—ã
function showLoading() {
    document.getElementById('loading-screen').classList.remove('hidden');
    document.getElementById('auth-screen').classList.add('hidden');
    document.getElementById('main-app').classList.add('hidden');
}

function hideLoading() {
    console.log('üéØ hideLoading –≤—ã–∑–≤–∞–Ω–∞');
    console.log('üéØ –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏...');
    document.getElementById('loading-screen').classList.add('hidden');
    console.log('‚úÖ –≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä—ã—Ç');
}

function showAuthScreen() {
    document.getElementById('auth-screen').classList.remove('hidden');
    document.getElementById('main-app').classList.add('hidden');
}

function showMainApp() {
    console.log('üéØ showMainApp –≤—ã–∑–≤–∞–Ω–∞');
    console.log('üéØ –°–∫—Ä—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
    document.getElementById('auth-screen').classList.add('hidden');
    console.log('üéØ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
    document.getElementById('main-app').classList.remove('hidden');
    console.log('üéØ –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞...');
    updateMonthDisplay();
    console.log('üéØ –í—ã–ø–æ–ª–Ω—è–µ–º PWA —à–æ—Ä—Ç–∫–∞—Ç—ã...');
    executePWAShortcuts();
    console.log('‚úÖ showMainApp –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
    // –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    setupAuthListeners();
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è
    setupNavigationListeners();
    
    // –°–º–µ–Ω—ã
    setupShiftsListeners();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    setupSettingsListeners();
    
    // –û—Ç—á–µ—Ç—ã
    setupReportsListeners();
    
    // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
    setupModalListeners();
    
    // PWA —É—Å—Ç–∞–Ω–æ–≤–∫–∞
    setupPWAListeners();
}

function setupAuthListeners() {
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
            document.querySelectorAll('.tab-btn').forEach(b => b.classList.remove('active'));
            e.target.classList.add('active');
            
            const isLogin = e.target.dataset.tab === 'login';
            document.getElementById('confirm-password-group').classList.toggle('hidden', isLogin);
            document.querySelector('#auth-form button[type="submit"]').textContent = isLogin ? '–í–æ–π—Ç–∏' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è';
        });
    });
    
    // –§–æ—Ä–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    document.getElementById('auth-form').addEventListener('submit', handleAuth);
    
    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
    document.getElementById('forgot-password-btn').addEventListener('click', handleForgotPassword);
    
    // –í—ã—Ö–æ–¥
    document.getElementById('logout-btn').addEventListener('click', handleLogout);
}

function setupNavigationListeners() {
    document.querySelectorAll('.nav-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
            const screen = e.target.dataset.screen;
            if (screen) {
                switchScreen(screen);
            }
        });
    });
}

function setupPWAListeners() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA
    const installBtn = document.getElementById('install-btn');
    if (installBtn) {
        installBtn.addEventListener('click', handleInstallClick);
        console.log('‚úÖ PWA: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω');
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è PWA
    const updateBtn = document.getElementById('update-btn');
    if (updateBtn) {
        updateBtn.addEventListener('click', handleUpdateClick);
        console.log('‚úÖ PWA: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–æ–±–∞–≤–ª–µ–Ω');
    }
}

function setupShiftsListeners() {
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ—Å—è—Ü–∞–º
    document.getElementById('prev-month').addEventListener('click', () => {
        currentMonth.setMonth(currentMonth.getMonth() - 1);
        updateMonthDisplay();
        loadShifts();
    });
    
    document.getElementById('next-month').addEventListener('click', () => {
        currentMonth.setMonth(currentMonth.getMonth() + 1);
        updateMonthDisplay();
        loadShifts();
    });
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–º–µ–Ω—ã
    document.getElementById('add-shift-btn').addEventListener('click', async () => await openShiftModal());
    
    // –§–æ—Ä–º–∞ —Å–º–µ–Ω—ã
    document.getElementById('shift-form').addEventListener('submit', handleShiftSubmit);
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å/–≤—ã—Ö–æ–¥–Ω–æ–π
    document.querySelectorAll('input[name="workday"]').forEach(radio => {
        radio.addEventListener('change', toggleWorkFields);
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª–µ–π
    ['shift-venue', 'shift-payout', 'shift-tips'].forEach(id => {
        document.getElementById(id).addEventListener('input', calculateShiftTotals);
    });
}

function setupSettingsListeners() {
    // –ó–∞–≤–µ–¥–µ–Ω–∏—è
    document.getElementById('add-venue-btn').addEventListener('click', () => openVenueModal());
    document.getElementById('venue-form').addEventListener('submit', handleVenueSubmit);
    
    // –ü–æ–∑–∏—Ü–∏–∏
    document.getElementById('add-product-btn').addEventListener('click', () => openProductModal());
    document.getElementById('product-form').addEventListener('submit', handleProductSubmit);
    
    // –¢–∏–ø –∫–æ–º–∏—Å—Å–∏–∏
    document.getElementById('commission-type').addEventListener('change', updateCommissionLabel);
    
    // –í–∞–ª—é—Ç–∞
    document.getElementById('currency-select').addEventListener('change', (e) => {
        currency = e.target.value;
        localStorage.setItem('currency', currency);
        updateCurrencyDisplay();
    });
    
    // –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞
    document.getElementById('clear-cache-btn').addEventListener('click', () => {
        if (confirm('–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –æ—á–∏—Å—Ç–∏—Ç –≤–µ—Å—å –∫—ç—à –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
            clearAllCachesAndReload();
        }
    });
    

    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    window.testSaveButton = function() {
        console.log('=== –¢–ï–°–¢ –ö–ù–û–ü–ö–ò –°–û–•–†–ê–ù–ï–ù–ò–Ø ===');
        
        const form = document.getElementById('shift-form');
        const submitBtn = form.querySelector('button[type="submit"]');
        const modal = document.getElementById('shift-modal');
        
        console.log('–§–æ—Ä–º–∞ shift-form:', form);
        console.log('–ö–Ω–æ–ø–∫–∞ submit:', submitBtn);
        console.log('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ?', !modal.classList.contains('hidden'));
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        const listeners = getEventListeners(form);
        console.log('–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —Ñ–æ—Ä–º—ã:', listeners);
        
        // –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å submit
        console.log('–ü—Ä–æ–±—É–µ–º –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π submit...');
        try {
            form.dispatchEvent(new Event('submit', { bubbles: true, cancelable: true }));
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–º submit:', error);
        }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    window.diagnoseConnection = diagnoseConnection;
    window.testUserAuth = async function() {
        console.log('=== –¢–ï–°–¢ –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===');
        try {
            const result = await getCurrentUser();
            console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', result);
            return result;
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            return null;
        }
    };
    window.retryDataLoad = async function() {
        console.log('=== –ü–û–í–¢–û–†–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• ===');
        if (currentUser) {
            await refreshUserData();
            console.log('–î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã');
        } else {
            console.log('–ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        }
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Ç–µ—Å—Ç–∞ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ –∫–æ–Ω—Å–æ–ª–∏
    window.testProductValues = function() {
        console.log('=== –¢–ï–°–¢ –ó–ù–ê–ß–ï–ù–ò–ô –ü–û–õ–ï–ô –ü–†–û–î–£–ö–¢–û–í ===');
        const allInputs = document.querySelectorAll('#product-fields .product-input');
        console.log(`–ù–∞–π–¥–µ–Ω–æ ${allInputs.length} –ø–æ–ª–µ–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤:`);
        
        allInputs.forEach((input, index) => {
            console.log(`–ü–æ–ª–µ ${index + 1}:`, {
                id: input.id,
                'data-product-id': input.getAttribute('data-product-id'),
                value: input.value,
                element: input
            });
        });
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º
        const testProductId = allInputs[0]?.getAttribute('data-product-id');
        if (testProductId) {
            const byGlobalSelector = document.querySelector(`[data-product-id="${testProductId}"]`);
            const shiftModal = document.getElementById('shift-modal');
            const byModalSelector = shiftModal.querySelector(`[data-product-id="${testProductId}"]`);
            const byId = document.getElementById(`product-${testProductId}`);
            console.log('–¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞:');
            console.log('–ü–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–º—É —Å–µ–ª–µ–∫—Ç–æ—Ä—É (–ù–ï–ü–†–ê–í–ò–õ–¨–ù–û):', byGlobalSelector);
            console.log('–ü–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ (–ü–†–ê–í–ò–õ–¨–ù–û):', byModalSelector);
            console.log('–ü–æ ID:', byId);
            console.log('–ú–æ–¥–∞–ª—å–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä = ID?', byModalSelector === byId);
        }
    };
}

function setupReportsListeners() {
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ—Å—è—Ü–∞–º –≤ –æ—Ç—á–µ—Ç–∞—Ö
    document.getElementById('reports-prev-month').addEventListener('click', () => {
        currentMonth.setMonth(currentMonth.getMonth() - 1);
        updateReportsMonth();
        generateReports();
    });
    
    document.getElementById('reports-next-month').addEventListener('click', () => {
        currentMonth.setMonth(currentMonth.getMonth() + 1);
        updateReportsMonth();
        generateReports();
    });
    
    // –ü—Ä–µ–º–∏—è
    document.getElementById('bonus-input').addEventListener('input', calculateNetEarnings);
    
    // –≠–∫—Å–ø–æ—Ä—Ç
    document.getElementById('export-btn').addEventListener('click', exportData);
}

function setupModalListeners() {
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    ['close-shift-modal', 'cancel-shift', 'close-venue-modal', 'cancel-venue', 
     'close-product-modal', 'cancel-product'].forEach(id => {
        document.getElementById(id).addEventListener('click', closeAllModals);
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –¢–û–õ–¨–ö–û –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è (–Ω–µ –∑–∞—Ç—Ä–∞–≥–∏–≤–∞–µ—Ç –¥—Ä—É–≥–∏–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞)
    ['close-message-modal', 'close-message'].forEach(id => {
        document.getElementById(id).addEventListener('click', closeMessageModal);
    });
    
    // –£–¥–∞–ª–µ–Ω–∏–µ
    document.getElementById('delete-shift').addEventListener('click', deleteShift);
    document.getElementById('delete-venue').addEventListener('click', deleteVenue);
    document.getElementById('delete-product').addEventListener('click', deleteProduct);
    
    // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –≤ –∑–∞–≤–µ–¥–µ–Ω–∏–µ
    document.getElementById('add-venue-product').addEventListener('click', addVenueProduct);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Ç–∫–ª—é—á–µ–Ω–æ
    // –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ –∫–Ω–æ–ø–∫–∞–º "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –∏–ª–∏ "–û—Ç–º–µ–Ω–∞"
}

// –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
async function handleAuth(e) {
    e.preventDefault();
    
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;
    const isLogin = document.querySelector('.tab-btn.active').dataset.tab === 'login';
    
    if (!isLogin) {
        const confirmPassword = document.getElementById('confirm-password').value;
        if (password !== confirmPassword) {
            showMessage('–û—à–∏–±–∫–∞', '–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
            return;
        }
    }
    
    try {
        let result;
        if (isLogin) {
            result = await supabase.auth.signInWithPassword({ email, password });
        } else {
            result = await supabase.auth.signUp({ email, password });
        }
        
        if (result.error) {
            throw result.error;
        }
        
        if (!isLogin && !result.data.user.email_confirmed_at) {
            showMessage('–£—Å–ø–µ—Ö', '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ email –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
            return;
        }
        
        currentUser = result.data.user;
        console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞:', currentUser.id);
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Å—Å–∏–∏
        startSessionCheck();
        
        await loadUserData();
        showMainApp();
        
    } catch (error) {
        showMessage('–û—à–∏–±–∫–∞', error.message);
    }
}

async function handleForgotPassword() {
    const email = document.getElementById('email').value;
    if (!email) {
        showMessage('–û—à–∏–±–∫–∞', '–í–≤–µ–¥–∏—Ç–µ email –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è');
        return;
    }
    
    try {
        const { error } = await supabase.auth.resetPasswordForEmail(email);
        if (error) throw error;
        
        showMessage('–£—Å–ø–µ—Ö', '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ email');
    } catch (error) {
        showMessage('–û—à–∏–±–∫–∞', error.message);
    }
}

async function handleLogout() {
    try {
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Å—Å–∏–∏
        stopSessionCheck();
        
        // –û—á–∏—â–∞–µ–º –∫—ç—à –¥–∞–Ω–Ω—ã—Ö
        clearDataCache();
        
        await supabase.auth.signOut();
        currentUser = null;
        venues = [];
        products = [];
        shifts = [];
        showAuthScreen();
    } catch (error) {
        showMessage('–û—à–∏–±–∫–∞', error.message);
    }
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è
function switchScreen(screenName) {
    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    document.querySelectorAll('.nav-btn').forEach(btn => {
        btn.classList.toggle('active', btn.dataset.screen === screenName);
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —ç–∫—Ä–∞–Ω
    document.querySelectorAll('.content-screen').forEach(screen => {
        screen.classList.add('hidden');
    });
    document.getElementById(`${screenName}-screen`).classList.remove('hidden');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Ä–∞–Ω–∞
    switch (screenName) {
        case 'shifts':
            loadShifts();
            break;
        case 'reports':
            generateReports();
            break;
        case 'settings':
            loadSettings();
            break;
    }
}



// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –¥–ª—è —Å–ª–∞–±–æ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
async function loadUserData() {
    console.log('üîÑ loadUserData –Ω–∞—á–∞—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π');
    
    try {
        console.log('üí∞ –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∞–ª—é—Ç—ã...');
        currency = localStorage.getItem('currency') || '‚ÇΩ';
        document.getElementById('currency-select').value = currency;
        console.log('‚úÖ –í–∞–ª—é—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞:', currency);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        console.log('üîß –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        currentUser = await getCurrentUser();
        
        if (!currentUser) {
            console.log('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', currentUser.id);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
        loadCachedData();
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
        console.log('1Ô∏è‚É£ –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏—è...');
        await loadVenuesOptimized();
        updateVenueSelects();
        
        console.log('2Ô∏è‚É£ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã...');
        await loadProductsOptimized();
        
        console.log('3Ô∏è‚É£ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–º–µ–Ω—ã...');
        await loadShiftsOptimized();
        
        console.log('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        
        // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: —Å–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...');
        hideLoading();
        showMainApp();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –Ω–æ –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º —Ä–∞–±–æ—Ç—É
        showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ.');
        console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
function loadCachedData() {
    console.log('üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ...');
    
    try {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è
        const cachedVenues = localStorage.getItem('cached_venues');
        if (cachedVenues) {
            venues = JSON.parse(cachedVenues);
            console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏–π:', venues.length);
        }
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
        const cachedProducts = localStorage.getItem('cached_products');
        if (cachedProducts) {
            products = JSON.parse(cachedProducts);
            console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', products.length);
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        if (venues.length > 0) {
            updateVenueSelects();
            renderVenuesList();
        }
        
        if (products.length > 0) {
            renderProductsList();
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
    }
}

async function loadVenuesOptimized() {
    console.log('üè¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–π —Å retry');
    
    if (!currentUser?.id) {
        console.error('‚ùå –ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        return;
    }
    
    const maxRetries = 2;
    const baseTimeout = 5000; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π —Ç–∞–π–º–∞—É—Ç
    
    for (let attempt = 1; attempt <= maxRetries; attempt++) {
        try {
            const timeout = baseTimeout * Math.pow(1.5, attempt - 1);
            console.log(`üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–π, –ø–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxRetries}, —Ç–∞–π–º–∞—É—Ç: ${timeout}ms`);
            
            const timeoutPromise = new Promise((_, reject) => 
                setTimeout(() => reject(new Error(`–¢–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–µ–¥–µ–Ω–∏–π (${timeout}ms)`)), timeout)
            );
            
            const venuesPromise = supabase
                .from('venues')
                .select('id, name, user_id, default_fixed_payout') // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω—É–∂–Ω—ã–µ –ø–æ–ª—è
                .eq('user_id', currentUser.id)
                .order('name');
            
            const { data, error } = await Promise.race([venuesPromise, timeoutPromise]);
            
            if (error) {
                throw error;
            }
            
            venues = data || [];
            console.log(`‚úÖ –ó–∞–≤–µ–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, venues.length);
            
            // –ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            localStorage.setItem('cached_venues', JSON.stringify(venues));
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            updateVenueSelects();
            renderVenuesList();
            
            return; // –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
            
        } catch (error) {
            if (attempt === maxRetries) {
                console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫:', error);
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –µ—Å—Ç—å
                if (venues.length === 0) {
                    console.log('üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è');
                    loadCachedData();
                }
            } else {
                console.warn(`‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${attempt} –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–µ–¥–µ–Ω–∏–π –Ω–µ—É–¥–∞—á–Ω–∞:`, error.message);
                await new Promise(resolve => setTimeout(resolve, 1000 * attempt));
            }
        }
    }
}

async function loadProductsAndShiftsInBackground() {
    console.log('üîÑ –§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏ —Å–º–µ–Ω');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    setTimeout(async () => {
        try {
            console.log('üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –≤ —Ñ–æ–Ω–µ...');
            await loadProductsOptimized();
            
            console.log('üìÖ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–º–µ–Ω—ã –≤ —Ñ–æ–Ω–µ...');
            await loadShiftsOptimized();
            
            console.log('‚úÖ –§–æ–Ω–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏:', error);
        }
    }, 500); // –ó–∞–¥–µ—Ä–∂–∫–∞ 500–º—Å
}

async function loadProductsOptimized() {
    if (!currentUser?.id) return;
    
    const maxRetries = 2;
    const baseTimeout = 6000;
    
    console.log('üì¶ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å retry');
    
    for (let attempt = 1; attempt <= maxRetries; attempt++) {
        try {
            const timeout = baseTimeout * Math.pow(1.5, attempt - 1);
            console.log(`üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –ø–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxRetries}, —Ç–∞–π–º–∞—É—Ç: ${timeout}ms`);
            
            const timeoutPromise = new Promise((_, reject) => 
                setTimeout(() => reject(new Error(`–¢–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ (${timeout}ms)`)), timeout)
            );
            
            const productsPromise = supabase
                .from('venue_products')
                .select('id, name, price_per_unit, commission_type, commission_value, venue_id')
                .in('venue_id', venues.map(v => v.id))
                .order('name')
                .limit(100); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç
            
            const { data, error } = await Promise.race([productsPromise, timeoutPromise]);
            
            if (error) {
                throw error;
            }
            
            if (data) {
                products = data;
                console.log(`‚úÖ –ü—Ä–æ–¥—É–∫—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, products.length);
                
                // –ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
                localStorage.setItem('cached_products', JSON.stringify(products));
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                renderProductsList();
                updateProductFields();
                
                return; // –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
            }
            
        } catch (error) {
            if (attempt === maxRetries) {
                console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫:', error);
            } else {
                console.warn(`‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${attempt} –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –Ω–µ—É–¥–∞—á–Ω–∞:`, error.message);
                await new Promise(resolve => setTimeout(resolve, 1000 * attempt));
            }
        }
    }
}

async function loadShiftsOptimized() {
    if (!currentUser?.id) {
        console.log('‚ö†Ô∏è –ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–º–µ–Ω');
        return;
    }
    
    const maxRetries = 3;
    const baseTimeout = 8000; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π —Ç–∞–π–º–∞—É—Ç
    
    console.log('üìÖ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–º–µ–Ω—ã —Å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–µ–π –∏ retry');
    
    for (let attempt = 1; attempt <= maxRetries; attempt++) {
        try {
            const timeout = baseTimeout * Math.pow(1.2, attempt - 1);
            console.log(`üîÑ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–º–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxRetries}, —Ç–∞–π–º–∞—É—Ç: ${timeout}ms`);
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ —à–∏—Ä–æ–∫–∏–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
            const startOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);
            const endOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 0);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–ø—Ä–æ—Å–∞
            console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ —Å–º–µ–Ω:', {
                userId: currentUser.id,
                startDate: startOfMonth.toISOString().split('T')[0],
                endDate: endOfMonth.toISOString().split('T')[0],
                currentMonth: currentMonth.toISOString().split('T')[0]
            });
            
            const timeoutPromise = new Promise((_, reject) => 
                setTimeout(() => reject(new Error(`–¢–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å–º–µ–Ω (${timeout}ms)`)), timeout)
            );
            
            const shiftsPromise = supabase
                .from('shifts')
                .select('id, shift_date, is_workday, venue_id, fixed_payout, tips, revenue_generated, earnings, user_id')
                .eq('user_id', currentUser.id)
                .gte('shift_date', startOfMonth.toISOString().split('T')[0])
                .lte('shift_date', endOfMonth.toISOString().split('T')[0])
                .order('shift_date', { ascending: false });
            
            const { data, error } = await Promise.race([shiftsPromise, timeoutPromise]);
            
            if (error) {
                throw error;
            }
            
            shifts = data || [];
            console.log(`‚úÖ –°–º–µ–Ω—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, shifts.length);
            console.log('üìã –ü–û–î–†–û–ë–ù–´–ï –î–ê–ù–ù–´–ï –°–ú–ï–ù:', data);
            console.log('üìÖ –ü–µ—Ä–∏–æ–¥ –∑–∞–≥—Ä—É–∑–∫–∏:', {
                start: startOfMonth.toISOString().split('T')[0],
                end: endOfMonth.toISOString().split('T')[0],
                currentMonth: currentMonth.toLocaleDateString('ru-RU', { month: 'long', year: 'numeric' })
            });
            
            // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            renderShiftsList();
            
            // –ï—Å–ª–∏ —Å–º–µ–Ω –Ω–µ—Ç, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (shifts.length === 0) {
                console.log('‚ÑπÔ∏è –ù–µ—Ç —Å–º–µ–Ω –∑–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü');
                const monthName = currentMonth.toLocaleDateString('ru-RU', { month: 'long', year: 'numeric' });
                showMessage('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', `–ù–µ—Ç —Å–º–µ–Ω –∑–∞ ${monthName}. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é —Å–º–µ–Ω—É!`);
            }
            
            return; // –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
            
        } catch (error) {
            console.warn(`‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${attempt} –∑–∞–≥—Ä—É–∑–∫–∏ —Å–º–µ–Ω –Ω–µ—É–¥–∞—á–Ω–∞:`, error.message);
            
            if (attempt === maxRetries) {
                console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–º–µ–Ω—ã –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫:', error);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
                shifts = [];
                renderShiftsList();
                
                showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–º–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.');
            } else {
                // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
                await new Promise(resolve => setTimeout(resolve, 1000 * attempt));
            }
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
function clearDataCache() {
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –¥–∞–Ω–Ω—ã—Ö');
    localStorage.removeItem('cached_venues');
    localStorage.removeItem('cached_products');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞
function updateDataCache() {
    try {
        if (venues.length > 0) {
            localStorage.setItem('cached_venues', JSON.stringify(venues));
        }
        if (products.length > 0) {
            localStorage.setItem('cached_products', JSON.stringify(products));
        }
        console.log('üì¶ –ö—ç—à –æ–±–Ω–æ–≤–ª–µ–Ω');
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞:', error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
async function diagnoseConnection() {
    console.log('üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    console.log('üìã –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', {
        onlineStatus: navigator.onLine,
        supabaseUrl: SUPABASE_URL,
        hasSupabaseClient: !!supabase,
        currentUser: !!currentUser,
        timestamp: new Date().toISOString()
    });
    
    // –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    try {
        const startTime = Date.now();
        const { data, error } = await supabase.from('venues').select('count').limit(1);
        const elapsed = Date.now() - startTime;
        
        console.log(`‚úÖ –¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–µ–Ω (${elapsed}ms):`, { data, error });
        return { success: true, latency: elapsed };
    } catch (error) {
        console.error('‚ùå –¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –Ω–µ—É–¥–∞—á–µ–Ω:', error);
        return { success: false, error: error.message };
    }
}

async function loadVenues() {
    console.log('üè¢ loadVenues –Ω–∞—á–∞—Ç–∞');
    
    if (!currentUser || !currentUser.id) {
        console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–µ–¥–µ–Ω–∏–π');
        return;
    }
    
    console.log('üë§ –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser.id);
    
    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Supabase —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Supabase:');
    console.log('üì° Supabase URL:', supabase?.supabaseUrl || '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
    console.log('üîë Supabase Key:', supabase?.supabaseKey ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    console.log('‚ö° Supabase auth:', supabase?.auth ? '–¥–æ—Å—Ç—É–ø–µ–Ω' : '–Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    console.log('üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...');
    console.log('üì± Online status:', navigator.onLine ? '–ø–æ–¥–∫–ª—é—á–µ–Ω' : '–æ—Ç–∫–ª—é—á–µ–Ω');
    
    if (!navigator.onLine) {
        console.warn('‚ö†Ô∏è –ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
        showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ù–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∞–≤—Ç–æ–Ω–æ–º–Ω–æ–º —Ä–µ–∂–∏–º–µ.');
        venues = [];
        updateVenueSelects();
        renderVenuesList();
        return;
    }
    
    try {
        console.log('üîç –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Ç–∞–±–ª–∏—Ü–µ venues...');
        
        // –†–∞–∑—É–º–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã
        const timeoutDuration = window.location.hostname === 'localhost' ? 15000 : 10000;
        console.log(`‚è±Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–π–º–∞—É—Ç: ${timeoutDuration/1000} —Å–µ–∫—É–Ω–¥`);
        
        // –ü—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å retry
        let lastError = null;
        let data = null;
        
        for (let attempt = 1; attempt <= 2; attempt++) {
            console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/2 –∑–∞–≥—Ä—É–∑–∫–∏ venues...`);
            
            try {
                const venuesPromise = supabase
                    .from('venues')
                    .select('*')
                    .eq('user_id', currentUser.id)
                    .order('name');
                    
                const timeoutPromise = new Promise((_, reject) => 
                    setTimeout(() => reject(new Error(`–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ venues (–ø–æ–ø—ã—Ç–∫–∞ ${attempt})`)), timeoutDuration)
                );
                
                const result = await Promise.race([venuesPromise, timeoutPromise]);
                
                if (result.error) {
                    lastError = result.error;
                    console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, result.error);
                    if (attempt < 3) {
                        console.log('‚è≥ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º...');
                        await new Promise(resolve => setTimeout(resolve, 2000));
                        continue;
                    }
                } else {
                    data = result.data;
                    console.log(`‚úÖ –£—Å–ø–µ—Ö –≤ –ø–æ–ø—ã—Ç–∫–µ ${attempt}!`);
                    break;
                }
            } catch (error) {
                lastError = error;
                console.warn(`‚ö†Ô∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, error);
                if (attempt < 3) {
                    console.log('‚è≥ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º...');
                    await new Promise(resolve => setTimeout(resolve, 2000));
                    continue;
                }
            }
        }
        
        console.log('üìã –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç venues:', { data, error: lastError });
        
        if (lastError) {
            console.error('‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ venues –Ω–µ—É–¥–∞—á–Ω—ã:', lastError);
            console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ fallback —Ä–µ–∂–∏–º –±–µ–∑ –∑–∞–≤–µ–¥–µ–Ω–∏–π');
            venues = [];
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏  
            showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏—è. –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–ª—è—Ç—å —Å–º–µ–Ω—ã –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è.');
            
            console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–ª–µ–∫—Ç—ã –∑–∞–≤–µ–¥–µ–Ω–∏–π...');
            updateVenueSelects();
            console.log('üé® –†–µ–Ω–¥–µ—Ä–∏–º —Å–ø–∏—Å–æ–∫ –∑–∞–≤–µ–¥–µ–Ω–∏–π...');
            renderVenuesList();
            console.log('‚úÖ loadVenues –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –≤ fallback —Ä–µ–∂–∏–º–µ');
            return; // –ù–µ –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
        }
        
        venues = data || [];
        console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞–≤–µ–¥–µ–Ω–∏–π:', venues.length);
        venues.forEach((venue, index) => {
            if (!venue.id || venue.id === 'undefined') {
                console.error(`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ #${index}:`, venue);
            }
        });
        
        console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ–ª–µ–∫—Ç—ã –∑–∞–≤–µ–¥–µ–Ω–∏–π...');
        updateVenueSelects();
        console.log('üé® –†–µ–Ω–¥–µ—Ä–∏–º —Å–ø–∏—Å–æ–∫ –∑–∞–≤–µ–¥–µ–Ω–∏–π...');
        renderVenuesList();
        console.log('‚úÖ loadVenues –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–µ–¥–µ–Ω–∏–π:', error);
        console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π fallback —Ä–µ–∂–∏–º');
        venues = [];
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –±–ª–æ–∫–∏—Ä—É—é—â–µ–π –æ—à–∏–±–∫–∏
        showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–≤–µ–¥–µ–Ω–∏–π. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ.');
        
        // –í—Å–µ —Ä–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updateVenueSelects();
        renderVenuesList();
        console.log('‚úÖ loadVenues –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º fallback —Ä–µ–∂–∏–º–µ');
        // –ù–ï –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É - –ø–æ–∑–≤–æ–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É
    }
}

async function loadProducts() {
    console.log('üõçÔ∏è loadProducts –Ω–∞—á–∞—Ç–∞');
    
    if (!currentUser || !currentUser.id) {
        console.error('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
        return;
    }
    
    console.log('üë§ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser.id);
    
    try {
        console.log('üîç –í—ã–ø–æ–ª–Ω—è–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å –∫ —Ç–∞–±–ª–∏—Ü–µ venue_products...');
        
        // –†–∞–∑—É–º–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã
        const timeoutDuration = window.location.hostname === 'localhost' ? 15000 : 10000;
        console.log(`‚è±Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è products: ${timeoutDuration/1000} —Å–µ–∫—É–Ω–¥`);
        
        // –ü—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å retry
        let lastError = null;
        let allProducts = null;
        
        for (let attempt = 1; attempt <= 2; attempt++) {
            console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/2 –∑–∞–≥—Ä—É–∑–∫–∏ products...`);
            
            try {
                const productsPromise = supabase
                    .from('venue_products')
                    .select('*')
                    .order('name');
                    
                const timeoutPromise = new Promise((_, reject) => 
                    setTimeout(() => reject(new Error(`–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ products (–ø–æ–ø—ã—Ç–∫–∞ ${attempt})`)), timeoutDuration)
                );
                
                const result = await Promise.race([productsPromise, timeoutPromise]);
                
                if (result.error) {
                    lastError = result.error;
                    console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, result.error);
                    if (attempt < 3) {
                        console.log('‚è≥ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º...');
                        await new Promise(resolve => setTimeout(resolve, 2000));
                        continue;
                    }
                } else {
                    allProducts = result.data;
                    console.log(`‚úÖ –£—Å–ø–µ—Ö –≤ –ø–æ–ø—ã—Ç–∫–µ ${attempt}!`);
                    break;
                }
            } catch (error) {
                lastError = error;
                console.warn(`‚ö†Ô∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, error);
                if (attempt < 3) {
                    console.log('‚è≥ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º...');
                    await new Promise(resolve => setTimeout(resolve, 2000));
                    continue;
                }
            }
        }
        
        console.log('üìã –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç products:', { count: allProducts?.length, error: lastError });
        
        if (lastError) {
            console.error('‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ products –Ω–µ—É–¥–∞—á–Ω—ã:', lastError);
            console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ fallback —Ä–µ–∂–∏–º –±–µ–∑ –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
            products = [];
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏  
            showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–∑–∏—Ü–∏–∏. –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–∑–∏—Ü–∏–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.');
            
            console.log('üé® –†–µ–Ω–¥–µ—Ä–∏–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');
            renderProductsList();
            updateProductFields();
            console.log('‚úÖ loadProducts –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –≤ fallback —Ä–µ–∂–∏–º–µ');
            return; // –ù–µ –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
        }
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        console.log('üîç –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        const userVenueIds = venues.map(v => v.id);
        const data = allProducts ? allProducts.filter(product => 
            userVenueIds.includes(product.venue_id)
        ) : [];
        
        console.log('üìã –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:', { count: data.length });
        
        products = data || [];
        
        console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', products.length);  
        products.forEach((product, index) => {
            if (!product.id || product.id === 'undefined') {
                console.error(`‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç #${index}:`, product);
            }
        });
        
        console.log('üé® –†–µ–Ω–¥–µ—Ä–∏–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');
        renderProductsList();
        console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤...');
        updateProductFields();
        console.log('‚úÖ loadProducts –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–∑–∏—Ü–∏–π:', error);
        console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π fallback —Ä–µ–∂–∏–º –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
        products = [];
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –±–ª–æ–∫–∏—Ä—É—é—â–µ–π –æ—à–∏–±–∫–∏
        showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–æ–∑–∏—Ü–∏–π. –í—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ–∑–∏—Ü–∏–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.');
        
        // –í—Å–µ —Ä–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        renderProductsList();
        updateProductFields();
        console.log('‚úÖ loadProducts –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º fallback —Ä–µ–∂–∏–º–µ');
        // –ù–ï –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É - –ø–æ–∑–≤–æ–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É
    }
}

async function loadShifts() {
    console.log('üìÖ loadShifts –Ω–∞—á–∞—Ç–∞');
    
    const startOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);
    const endOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 0);
    
    console.log('üë§ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–º–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser?.id);
    console.log('üìÖ –ü–µ—Ä–∏–æ–¥:', startOfMonth.toISOString().split('T')[0], '–¥–æ', endOfMonth.toISOString().split('T')[0]);
    
    try {
        console.log('üîç –í—ã–ø–æ–ª–Ω—è–µ–º –±–∞–∑–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å —Å–º–µ–Ω —Å —Ç–∞–π–º–∞—É—Ç–æ–º...');
        
        // –†–∞–∑—É–º–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã
        const timeoutDuration = window.location.hostname === 'localhost' ? 15000 : 10000;
        console.log(`‚è±Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è shifts: ${timeoutDuration/1000} —Å–µ–∫—É–Ω–¥`);
        
        // –ü—Ä–æ–±—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —Å retry
        let lastError = null;
        let basicShifts = null;
        
        for (let attempt = 1; attempt <= 2; attempt++) {
            console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/2 –∑–∞–≥—Ä—É–∑–∫–∏ shifts...`);
            
            try {
                const basicShiftsPromise = supabase
                    .from('shifts')
                    .select('*')
                    .eq('user_id', currentUser.id)
                    .gte('shift_date', startOfMonth.toISOString().split('T')[0])
                    .lte('shift_date', endOfMonth.toISOString().split('T')[0])
                    .order('shift_date');
                    
                const timeoutPromise = new Promise((_, reject) => 
                    setTimeout(() => reject(new Error(`–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ shifts (–ø–æ–ø—ã—Ç–∫–∞ ${attempt})`)), timeoutDuration)
                );
                
                const result = await Promise.race([basicShiftsPromise, timeoutPromise]);
                
                if (result.error) {
                    lastError = result.error;
                    console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, result.error);
                    if (attempt < 3) {
                        console.log('‚è≥ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º...');
                        await new Promise(resolve => setTimeout(resolve, 2000));
                        continue;
                    }
                } else {
                    basicShifts = result.data;
                    console.log(`‚úÖ –£—Å–ø–µ—Ö –≤ –ø–æ–ø—ã—Ç–∫–µ ${attempt}!`);
                    break;
                }
            } catch (error) {
                lastError = error;
                console.warn(`‚ö†Ô∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –≤ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, error);
                if (attempt < 3) {
                    console.log('‚è≥ –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º...');
                    await new Promise(resolve => setTimeout(resolve, 2000));
                    continue;
                }
            }
        }
        
        console.log('üìã –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç shifts:', { count: basicShifts?.length, error: lastError });
        
        if (lastError) {
            console.error('‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ shifts –Ω–µ—É–¥–∞—á–Ω—ã:', lastError);
            console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ fallback —Ä–µ–∂–∏–º –±–µ–∑ —Å–º–µ–Ω');
            shifts = [];
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏  
            showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–º–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
            
            console.log('üé® –†–µ–Ω–¥–µ—Ä–∏–º –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Å–º–µ–Ω...');
            renderShiftsList();
            console.log('‚úÖ loadShifts –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –≤ fallback —Ä–µ–∂–∏–º–µ');
            return; // –ù–µ –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É
        }
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω (–±–µ–∑ JOIN)');
        shifts = basicShifts || [];
        console.log('üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ–Ω:', shifts.length);
        
        console.log('üé® –†–µ–Ω–¥–µ—Ä–∏–º —Å–ø–∏—Å–æ–∫ —Å–º–µ–Ω...');
        renderShiftsList();
        console.log('‚úÖ loadShifts –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–º–µ–Ω:', error);
        console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π fallback —Ä–µ–∂–∏–º –¥–ª—è —Å–º–µ–Ω');
        shifts = [];
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ –±–ª–æ–∫–∏—Ä—É—é—â–µ–π –æ—à–∏–±–∫–∏
        showMessage('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ', '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–º–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
        
        // –í—Å–µ —Ä–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        renderShiftsList();
        console.log('‚úÖ loadShifts –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –≤ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º fallback —Ä–µ–∂–∏–º–µ');
        // –ù–ï –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É - –ø–æ–∑–≤–æ–ª—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É
    }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
function updateMonthDisplay() {
    console.log('üìÖ updateMonthDisplay –Ω–∞—á–∞—Ç–∞');
    
    try {
        const monthNames = [
            '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
            '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
        ];
        const monthText = `${monthNames[currentMonth.getMonth()]} ${currentMonth.getFullYear()}`;
        
        console.log('üìÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –º–µ—Å—è—Ü–∞:', monthText);
        const monthElement = document.getElementById('current-month');
        if (monthElement) {
            monthElement.textContent = monthText;
            console.log('‚úÖ updateMonthDisplay –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
        } else {
            console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç current-month –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤ updateMonthDisplay:', error);
    }
}

function updateReportsMonth() {
    const monthNames = [
        '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
        '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
    ];
    const monthText = `${monthNames[currentMonth.getMonth()]} ${currentMonth.getFullYear()}`;
    document.getElementById('reports-current-month').textContent = monthText;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å–º–µ–Ω—ã —Å –∏–º–µ–Ω–∞–º–∏
async function loadShiftProducts(shiftId) {
    try {
        const { data: shiftProducts, error } = await supabase
            .from('shift_products')
            .select(`
                id,
                quantity,
                price_snapshot,
                commission_snapshot,
                product_id,
                venue_products (
                    name
                )
            `)
            .eq('shift_id', shiftId);
            
        if (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å–º–µ–Ω—ã:', error);
            return [];
        }
        
        return shiftProducts || [];
    } catch (error) {
        console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å–º–µ–Ω—ã:', error);
        return [];
    }
}

async function renderShiftsList() {
    console.log('üé® === –ù–ê–ß–ê–õ–û –†–ï–ù–î–ï–†–ê –°–ú–ï–ù ===');
    const container = document.getElementById('shifts-list');
    
    console.log('üìã –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä shifts-list –Ω–∞–π–¥–µ–Ω:', !!container);
    console.log('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', !!currentUser);
    console.log('üìÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ–Ω –≤ –º–∞—Å—Å–∏–≤–µ:', shifts.length);
    console.log('üìÖ –î–∞–Ω–Ω—ã–µ —Å–º–µ–Ω:', shifts);
    console.log('üè¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–µ–¥–µ–Ω–∏–π:', venues.length);
    console.log('üè¢ –î–∞–Ω–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏–π:', venues);
    console.log('üìÖ –¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü:', currentMonth.toLocaleDateString('ru-RU', { month: 'long', year: 'numeric' }));
    
    container.innerHTML = '';
    
    console.log('üé® –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–º–µ–Ω:', { count: shifts.length, currentUser: !!currentUser });
    
    if (!currentUser) {
        container.innerHTML = '<div style="padding: 40px; text-align: center; color: #6b7280;">–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–º–µ–Ω</div>';
        return;
    }
    
    if (shifts.length === 0) {
        const monthName = currentMonth.toLocaleDateString('ru-RU', { month: 'long', year: 'numeric' });
        container.innerHTML = `
            <div style="padding: 40px; text-align: center; color: #6b7280;">
                <div style="font-size: 18px; margin-bottom: 10px;">üìÖ –ù–µ—Ç —Å–º–µ–Ω –∑–∞ ${monthName}</div>
                <div style="font-size: 14px; color: #9ca3af;">–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é —Å–º–µ–Ω—É, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å —Å–º–µ–Ω—É"</div>
            </div>
        `;
        return;
    }
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –≤—Å–µ—Ö —Å–º–µ–Ω –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
    const shiftsWithProducts = await Promise.all(
        shifts.map(async (shift) => {
            const shiftProducts = await loadShiftProducts(shift.id);
            return { ...shift, products: shiftProducts };
        })
    );
    
    shiftsWithProducts.forEach(shift => {
        console.log('üéØ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–º–µ–Ω—É —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏:', shift);
        
        const shiftElement = document.createElement('div');
        shiftElement.className = `shift-card ${!shift.is_workday ? 'holiday' : ''}`;
        shiftElement.onclick = async () => await editShift(shift);
        
        const date = new Date(shift.shift_date);
        const dayNames = ['–í—Å', '–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±'];
        
        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –∏–∑ –º–∞—Å—Å–∏–≤–∞ venues
        const venue = venues.find(v => v.id === shift.venue_id);
        const venueName = venue?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        let productsHtml = '';
        if (shift.products && shift.products.length > 0) {
            productsHtml = '<div class="shift-products">';
            productsHtml += '<div class="products-header">üì¶ –ü–æ–∑–∏—Ü–∏–∏:</div>';
            
            shift.products.forEach(sp => {
                // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–∑–∏—Ü–∏–∏ –∏–∑ JOIN'–∞ –∏–ª–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞ products –∫–∞–∫ fallback
                const productName = sp.venue_products?.name || 
                                  products.find(p => p.id === sp.product_id)?.name || 
                                  '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è';
                const totalPrice = sp.quantity * sp.price_snapshot;
                
                productsHtml += `
                    <div class="product-item">
                        <span class="product-name">${productName}</span>
                        <span class="product-details">
                            ${sp.quantity} √ó ${formatCurrency(sp.price_snapshot)} = ${formatCurrency(totalPrice)}
                        </span>
                    </div>
                `;
            });
            
            productsHtml += '</div>';
        }
        
        shiftElement.innerHTML = `
            <div class="shift-header">
                <div class="shift-date">
                    <div class="date-day">${dayNames[date.getDay()]} ${date.getDate()}</div>
                    <div class="date-month">${date.toLocaleDateString('ru-RU', { month: 'short' })}</div>
                </div>
                <div class="shift-venue">${venueName}</div>
                <div class="shift-amounts">
                    <div class="amount-item">
                        <span class="amount-label">–ß–∞–µ–≤—ã–µ:</span>
                        <span class="amount-value">${formatCurrency(shift.tips || 0)}</span>
                    </div>
                    <div class="amount-item">
                        <span class="amount-label">–í—ã—Ä—É—á–∫–∞:</span>
                        <span class="amount-value">${formatCurrency(shift.revenue_generated || 0)}</span>
                    </div>
                    <div class="amount-item">
                        <span class="amount-label">–ó–∞—Ä–∞–±–æ—Ç–æ–∫:</span>
                        <span class="amount-value">${formatCurrency(shift.earnings || 0)}</span>
                    </div>
                </div>
            </div>
            ${productsHtml}
        `;
        
        container.appendChild(shiftElement);
    });
    
    console.log('‚úÖ === –†–ï–ù–î–ï–† –°–ú–ï–ù –ó–ê–í–ï–†–®–ï–ù ===');
    console.log('üìã HTML –∫–æ–Ω—Ç–µ–Ω—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:', container.innerHTML.length > 0 ? '–ó–ê–ü–û–õ–ù–ï–ù' : '–ü–£–°–¢–û–ô');
    console.log('üìã –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:', container.children.length);
}

function renderVenuesList() {
    const container = document.getElementById('venues-list');
    container.innerHTML = '';
    
    venues.forEach(venue => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏—è
        if (!venue.id || venue.id === 'undefined') {
            console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –≤ —Å–ø–∏—Å–∫–µ:', venue);
            return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ –∑–∞–≤–µ–¥–µ–Ω–∏–µ
        }
        
        const venueElement = document.createElement('div');
        venueElement.className = 'list-item';
        venueElement.innerHTML = `
            <div class="list-item-content">
                <div class="list-item-title">${venue.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</div>
                <div class="list-item-subtitle">–°—Ç–∞–≤–∫–∞: ${formatCurrency(venue.default_fixed_payout || 0)}</div>
            </div>
            <div class="list-item-actions">
                <button class="btn btn-secondary" data-action="edit" data-venue-id="${venue.id}">–ò–∑–º–µ–Ω–∏—Ç—å</button>
                <button class="btn btn-danger" data-action="delete" data-venue-id="${venue.id}">–£–¥–∞–ª–∏—Ç—å</button>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        const editBtn = venueElement.querySelector('[data-action="edit"]');
        const deleteBtn = venueElement.querySelector('[data-action="delete"]');
        
        editBtn.addEventListener('click', () => {
            console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, venueId:', venue.id);
            editVenue(venue.id);
        });
        
        deleteBtn.addEventListener('click', () => {
            console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —É–¥–∞–ª–µ–Ω–∏—è, venueId:', venue.id);
            confirmDeleteVenue(venue.id);
        });
        
        container.appendChild(venueElement);
    });
}

function renderProductsList() {
    const container = document.getElementById('products-list');
    container.innerHTML = '';
    
    products.forEach(product => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞
        if (!product.id || product.id === 'undefined') {
            console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ:', product);
            return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç –ø—Ä–æ–¥—É–∫—Ç
        }
        
        const productElement = document.createElement('div');
        productElement.className = 'list-item';
        
        const commissionText = product.commission_type === 'fixed' 
            ? formatCurrency(product.commission_value || 0)
            : `${product.commission_value || 0}%`;
            
        productElement.innerHTML = `
            <div class="list-item-content">
                <div class="list-item-title">${product.name || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</div>
                <div class="list-item-subtitle">–¶–µ–Ω–∞: ${formatCurrency(product.price_per_unit || 0)}, –ö–æ–º–∏—Å—Å–∏—è: ${commissionText}</div>
            </div>
            <div class="list-item-actions">
                <button class="btn btn-secondary" data-action="edit" data-product-id="${product.id}">–ò–∑–º–µ–Ω–∏—Ç—å</button>
                <button class="btn btn-danger" data-action="delete" data-product-id="${product.id}">–£–¥–∞–ª–∏—Ç—å</button>
            </div>
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        const editBtn = productElement.querySelector('[data-action="edit"]');
        const deleteBtn = productElement.querySelector('[data-action="delete"]');
        
        editBtn.addEventListener('click', () => {
            console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞, productId:', product.id);
            editProduct(product.id);
        });
        
        deleteBtn.addEventListener('click', () => {
            console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞, productId:', product.id);
            confirmDeleteProduct(product.id);
        });
        
        container.appendChild(productElement);
    });
}

// –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è —Å–º–µ–Ω
async function openShiftModal(shift = null) {
    editingShift = shift;
    const modal = document.getElementById('shift-modal');
    const title = document.getElementById('shift-modal-title');
    const deleteBtn = document.getElementById('delete-shift');
    
    if (shift) {
        title.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–º–µ–Ω—É';
        deleteBtn.classList.remove('hidden');
        console.log('üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
        await populateShiftForm(shift);
    } else {
        title.textContent = '–î–æ–±–∞–≤–∏—Ç—å —Å–º–µ–Ω—É';
        deleteBtn.classList.add('hidden');
        resetShiftForm();
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ä–∞–¥–∏–æ–∫–Ω–æ–ø–æ–∫ —Ä–∞–±–æ—á–∏–π/–≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å
    const workdayRadios = document.querySelectorAll('input[name="workday"]');
    workdayRadios.forEach(radio => {
        radio.addEventListener('change', toggleWorkFields);
    });
    
    modal.classList.remove('hidden');
    modal.style.display = 'flex';
    
    // –î–ª—è –Ω–æ–≤—ã—Ö —Å–º–µ–Ω –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    if (!shift) {
        console.log('–û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ - –Ω–∞—á–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª–µ–π');
        updateProductFields();
        calculateShiftTotals(); // –ù–∞—á–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç
    }
}

async function populateShiftForm(shift) {
    document.getElementById('shift-date').value = shift.shift_date;
    document.querySelector(`input[name="workday"][value="${shift.is_workday}"]`).checked = true;
    document.getElementById('shift-venue').value = shift.venue_id;
    document.getElementById('shift-payout').value = shift.fixed_payout;
    document.getElementById('shift-tips').value = shift.tips;
    
    toggleWorkFields();
    
    // –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –ø–æ—Ç–æ–º —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—è
    let shiftProductsData = [];
    
    if (shift.id && shift.id !== 'undefined') {
        console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è —Å–º–µ–Ω—ã ID:', shift.id);
        
        try {
            const { data: shiftProducts, error } = await supabase
                .from('shift_products')
                .select('*')
                .eq('shift_id', shift.id);
                
            console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ shift_products:', {
                data: shiftProducts,
                error: error,
                shiftId: shift.id,
                count: shiftProducts?.length || 0
            });
            
            if (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å–º–µ–Ω—ã:', error);
            } else {
                shiftProductsData = shiftProducts || [];
                console.log(`üì¶ –ù–∞–π–¥–µ–Ω–æ ${shiftProductsData.length} –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è —Å–º–µ–Ω—ã ${shift.id}`);
            }
            
        } catch (error) {
            console.error('‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å–º–µ–Ω—ã:', error);
        }
    }
    
    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    console.log('üîÑ –°–æ–∑–¥–∞–µ–º –ø–æ–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–º–µ–Ω—ã');
    updateProductFieldsWithData(shiftProductsData);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—ã –∏ –∏—Ç–æ–≥–∏
    setTimeout(() => {
        updateAllProductSums();
        calculateShiftTotals();
    }, 100);
}

function resetShiftForm() {
    document.getElementById('shift-form').reset();
    document.getElementById('shift-date').value = new Date().toISOString().split('T')[0];
    document.querySelector('input[name="workday"][value="true"]').checked = true;
    toggleWorkFields();
    // –û—á–∏—â–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Ñ–æ—Ä–º—ã
    updateProductFields(true);
}

function toggleWorkFields() {
    const isWorkday = document.querySelector('input[name="workday"]:checked').value === 'true';
    const workFields = document.getElementById('work-fields');
    
    if (isWorkday) {
        workFields.style.display = 'block';
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –Ω–∞ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å
        updateProductFields();
    } else {
        workFields.style.display = 'none';
        // –û–±–Ω—É–ª—è–µ–º –ø–æ–ª—è –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ
        document.getElementById('shift-venue').value = '';
        document.getElementById('shift-payout').value = 0;
        document.getElementById('shift-tips').value = 0;
        document.querySelectorAll('#product-fields input').forEach(input => {
            input.value = 0;
        });
        // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        const container = document.getElementById('product-fields');
        if (container) {
            container.innerHTML = '';
        }
    }
    
    calculateShiftTotals();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É–º–º—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞
function updateProductSum(productId, pricePerUnit) {
    const input = document.getElementById(`product-${productId}`);
    const sumElement = document.getElementById(`product-sum-${productId}`);
    
    if (input && sumElement) {
        const quantity = parseInt(input.value) || 0;
        const sum = quantity * pricePerUnit;
        sumElement.textContent = formatCurrency(sum);
        
        // –î–æ–±–∞–≤–ª—è–µ–º/—É–±–∏—Ä–∞–µ–º CSS-–∫–ª–∞—Å—Å –¥–ª—è –≤—ã–¥–µ–ª–µ–Ω–∏—è
        if (quantity > 0) {
            sumElement.classList.add('has-value');
        } else {
            sumElement.classList.remove('has-value');
        }
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—É–º–º –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
function updateAllProductSums() {
    const allInputs = document.querySelectorAll('#product-fields .product-input');
    
    allInputs.forEach(input => {
        const productId = input.getAttribute('data-product-id');
        if (productId) {
            // –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ–¥—É–∫—Ç –≤ –º–∞—Å—Å–∏–≤–µ products
            const product = products.find(p => p.id === productId);
            if (product) {
                updateProductSum(productId, product.price_per_unit);
            }
        }
    });
}

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–µ–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–º–µ–Ω—ã
function updateProductFieldsWithData(shiftProductsData = []) {
    const container = document.getElementById('product-fields');
    if (!container) {
        console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä product-fields –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    console.log('=== –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–ï–ô –ü–†–û–î–£–ö–¢–û–í –° –î–ê–ù–ù–´–ú–ò –°–ú–ï–ù–´ ===');
    console.log('–î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å–º–µ–Ω—ã:', shiftProductsData);
    
    container.innerHTML = '';
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ
    const selectedVenueId = document.getElementById('shift-venue')?.value;
    
    if (!selectedVenueId) {
        container.innerHTML = '<div class="form-group"><label>–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π</label></div>';
        calculateShiftTotals();
        return;
    }
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∑–∞–≤–µ–¥–µ–Ω–∏—é
    console.log('üè¢ –í—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ:', selectedVenueId);
    console.log('üì¶ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:', products);
    
    const venueProducts = products.filter(product => product.venue_id === selectedVenueId);
    console.log('üì¶ –ü—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –∑–∞–≤–µ–¥–µ–Ω–∏—è:', venueProducts);
    
    if (venueProducts.length === 0) {
        container.innerHTML = '<div class="form-group"><label>–£ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è –Ω–µ—Ç –ø–æ–∑–∏—Ü–∏–π</label></div>';
        calculateShiftTotals();
        return;
    }
    
    venueProducts.forEach(product => {
        const fieldGroup = document.createElement('div');
        fieldGroup.className = 'form-group';
        
        // –ò—â–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –≤ –¥–∞–Ω–Ω—ã—Ö —Å–º–µ–Ω—ã
        const shiftProduct = shiftProductsData.find(sp => sp.product_id === product.id);
        const quantity = shiftProduct ? shiftProduct.quantity : 0;
        
        console.log(`–ü—Ä–æ–¥—É–∫—Ç ${product.name}: —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ = ${quantity}`);
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—É–º–º—É
        const sum = quantity * product.price_per_unit;
        
        fieldGroup.innerHTML = `
            <label>${product.name} (${formatCurrency(product.price_per_unit)}):</label>
            <div class="product-input-group">
                <input type="number" data-product-id="${product.id}" min="0" step="1" value="${quantity}" class="product-input" id="product-${product.id}" placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ">
                <span class="product-sum ${quantity > 0 ? 'has-value' : ''}" id="product-sum-${product.id}">${formatCurrency(sum)}</span>
            </div>
        `;
        container.appendChild(fieldGroup);
        
        console.log(`–°–æ–∑–¥–∞–Ω–æ –ø–æ–ª–µ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ ${product.name} —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º: ${quantity}`);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ—Å—á–µ—Ç–∞
        const input = fieldGroup.querySelector('.product-input');
        input.addEventListener('input', (e) => {
            console.log(`–í–≤–µ–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ ${e.target.value} –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ ${product.name}`);
            updateProductSum(product.id, product.price_per_unit);
            calculateShiftTotals();
        });
        input.addEventListener('change', (e) => {
            console.log(`–ò–∑–º–µ–Ω–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ ${e.target.value} –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ ${product.name}`);
            updateProductSum(product.id, product.price_per_unit);
            calculateShiftTotals();
        });
    });
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–∏ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–µ–π
    calculateShiftTotals();
    
    console.log('‚úÖ === –ü–û–õ–Ø –ü–†–û–î–£–ö–¢–û–í –°–û–ó–î–ê–ù–´ –° –î–ê–ù–ù–´–ú–ò –°–ú–ï–ù–´ ===');
}

function updateProductFields(clearValues = false) {
    const container = document.getElementById('product-fields');
    if (!container) {
        console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä product-fields –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    console.log('=== –û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–û–õ–ï–ô –ü–†–û–î–£–ö–¢–û–í ===');
    console.log('–†–µ–∂–∏–º –æ—á–∏—Å—Ç–∫–∏ –∑–Ω–∞—á–µ–Ω–∏–π:', clearValues);
    console.log('–°—Ç–∞—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:', container.innerHTML);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª–µ–π –ø–µ—Ä–µ–¥ –æ—á–∏—Å—Ç–∫–æ–π (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ —Ä–µ–∂–∏–º –æ—á–∏—Å—Ç–∫–∏)
    const existingValues = {};
    if (!clearValues) {
        const existingInputs = container.querySelectorAll('.product-input');
        existingInputs.forEach(input => {
            const productId = input.getAttribute('data-product-id');
            if (productId && input.value) {
                existingValues[productId] = input.value;
                console.log(`–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ ${input.value} –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ ${productId}`);
            }
        });
    } else {
        console.log('üîÑ –û—á–∏—â–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ–ª–µ–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
    }
    
    container.innerHTML = '';
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ
    const selectedVenueId = document.getElementById('shift-venue')?.value;
    
    if (!selectedVenueId) {
        container.innerHTML = '<div class="form-group"><label>–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–π</label></div>';
        calculateShiftTotals(); // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è
        return;
    }
    
    // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∑–∞–≤–µ–¥–µ–Ω–∏—é
    console.log('üè¢ –í—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ:', selectedVenueId);
    console.log('üì¶ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:', products);
    
    const venueProducts = products.filter(product => product.venue_id === selectedVenueId);
    console.log('üì¶ –ü—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –∑–∞–≤–µ–¥–µ–Ω–∏—è:', venueProducts);
    
    if (venueProducts.length === 0) {
        container.innerHTML = '<div class="form-group"><label>–£ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è –Ω–µ—Ç –ø–æ–∑–∏—Ü–∏–π</label></div>';
        calculateShiftTotals(); // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        return;
    }
    
    venueProducts.forEach(product => {
        const fieldGroup = document.createElement('div');
        fieldGroup.className = 'form-group';
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º 0
        const savedValue = existingValues[product.id] || '0';
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é —Å—É–º–º—É
        const initialQuantity = parseInt(savedValue) || 0;
        const initialSum = initialQuantity * product.price_per_unit;
        
        fieldGroup.innerHTML = `
            <label>${product.name} (${formatCurrency(product.price_per_unit)}):</label>
            <div class="product-input-group">
                <input type="number" data-product-id="${product.id}" min="0" step="1" value="${savedValue}" class="product-input" id="product-${product.id}" placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ">
                <span class="product-sum" id="product-sum-${product.id}">${formatCurrency(initialSum)}</span>
            </div>
        `;
        container.appendChild(fieldGroup);
        
        console.log(`–°–æ–∑–¥–∞–Ω–æ –ø–æ–ª–µ –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ ${product.name} —Å ID: ${product.id}, –∑–Ω–∞—á–µ–Ω–∏–µ: ${savedValue}`);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ—Å—á–µ—Ç–∞
        const input = fieldGroup.querySelector('.product-input');
        input.addEventListener('input', (e) => {
            console.log(`–í–≤–µ–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ ${e.target.value} –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ ${product.name}`);
            updateProductSum(product.id, product.price_per_unit);
            calculateShiftTotals();
        });
        input.addEventListener('change', (e) => {
            console.log(`–ò–∑–º–µ–Ω–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ ${e.target.value} –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ ${product.name}`);
            updateProductSum(product.id, product.price_per_unit);
            calculateShiftTotals();
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å —Ç–∞–∫–∏–º –∂–µ data-product-id
        setTimeout(() => {
            const allSameId = document.querySelectorAll(`[data-product-id="${product.id}"]`);
            console.log(`–≠–ª–µ–º–µ–Ω—Ç–æ–≤ —Å data-product-id="${product.id}": ${allSameId.length}`);
            if (allSameId.length > 1) {
                console.warn(`‚ö†Ô∏è –ù–ê–ô–î–ï–ù–û ${allSameId.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º ID!`, allSameId);
            }
        }, 100);
    });
    
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–∏ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π
    calculateShiftTotals();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—ã –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    setTimeout(() => updateAllProductSums(), 50);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ–ª–µ–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤
function saveAllProductValues() {
    const savedValues = {};
    const allInputs = document.querySelectorAll('#product-fields .product-input');
    
    allInputs.forEach(input => {
        const productId = input.getAttribute('data-product-id');
        if (productId) {
            savedValues[productId] = input.value;
            console.log(`–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${productId} = ${input.value}`);
        }
    });
    
    return savedValues;
}

function updateVenueSelects() {
    const select = document.getElementById('shift-venue');
    select.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ</option>';
    
    venues.forEach(venue => {
        const option = document.createElement('option');
        option.value = venue.id;
        option.textContent = venue.name;
        option.dataset.payout = venue.default_fixed_payout;
        select.appendChild(option);
    });
    
    // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—Ç–∞–≤–∫–∏ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    select.addEventListener('change', (e) => {
        const selectedOption = e.target.options[e.target.selectedIndex];
        if (selectedOption.dataset.payout) {
            document.getElementById('shift-payout').value = selectedOption.dataset.payout;
        }
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è
        console.log('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è - –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
        updateProductFields();
        calculateShiftTotals();
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞–≤–∫–∏ –∏ —á–∞–µ–≤—ã—Ö
    const payoutField = document.getElementById('shift-payout');
    const tipsField = document.getElementById('shift-tips');
    
    if (payoutField) {
        payoutField.addEventListener('input', calculateShiftTotals);
        payoutField.addEventListener('change', calculateShiftTotals);
    }
    
    if (tipsField) {
        tipsField.addEventListener('input', calculateShiftTotals);
        tipsField.addEventListener('change', calculateShiftTotals);
    }
}

function calculateShiftTotals() {
    const isWorkday = document.querySelector('input[name="workday"]:checked')?.value === 'true';
    
    console.log('–†–∞—Å—á–µ—Ç –∏—Ç–æ–≥–æ–≤ —Å–º–µ–Ω—ã. –†–∞–±–æ—á–∏–π –¥–µ–Ω—å:', isWorkday);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—ã –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
    updateAllProductSums();
    
    if (!isWorkday) {
        document.getElementById('shift-revenue').value = 0;
        document.getElementById('shift-earnings').value = 0;
        return;
    }
    
    let revenue = 0;
    let earnings = 0;
    
    // –†–∞—Å—á–µ—Ç –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∞–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è
    const selectedVenueId = document.getElementById('shift-venue')?.value;
    console.log('–í—ã–±—Ä–∞–Ω–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ:', selectedVenueId);
    
    if (selectedVenueId) {
        const venueProducts = products.filter(product => product.venue_id === selectedVenueId);
        console.log('–ü—Ä–æ–¥—É–∫—Ç—ã –∑–∞–≤–µ–¥–µ–Ω–∏—è:', venueProducts);
        
        venueProducts.forEach(product => {
            // –ò—â–µ–º —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–º–µ–Ω—ã, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
            const shiftModal = document.getElementById('shift-modal');
            let input = shiftModal.querySelector(`[data-product-id="${product.id}"]`);
            
            // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
            if (!input) {
                input = document.getElementById(`product-${product.id}`);
            }
            
            if (input) {
                const quantity = parseInt(input.value) || 0;
                console.log(`–ü—Ä–æ–¥—É–∫—Ç ${product.name}: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ=${quantity}, —Ü–µ–Ω–∞=${product.price_per_unit}, input.value='${input.value}'`);
                
                if (quantity > 0) {
                    const productRevenue = quantity * product.price_per_unit;
                    revenue += productRevenue;
                    
                    const commission = product.commission_type === 'fixed' 
                        ? product.commission_value
                        : product.price_per_unit * (product.commission_value / 100);
                    const productEarnings = quantity * commission;
                    earnings += productEarnings;
                    
                    console.log(`  –í—ã—Ä—É—á–∫–∞: ${productRevenue}, –ó–∞—Ä–∞–±–æ—Ç–æ–∫: ${productEarnings}`);
                }
            } else {
                console.log(`‚ùå Input –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ ${product.name} (id: ${product.id})`);
            }
        });
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç–∞–≤–∫—É –∏ —á–∞–µ–≤—ã–µ
    const payout = parseFloat(document.getElementById('shift-payout').value) || 0;
    const tips = parseFloat(document.getElementById('shift-tips').value) || 0;
    earnings += payout + tips;
    
    console.log(`–ò—Ç–æ–≥–æ–≤–∞—è –≤—ã—Ä—É—á–∫–∞: ${revenue}, –ò—Ç–æ–≥–æ–≤—ã–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫: ${earnings}`);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –±–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
    document.getElementById('shift-revenue').value = revenue;
    document.getElementById('shift-earnings').value = earnings;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø–æ–ª—è—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const revenueDisplay = document.getElementById('shift-revenue-display');
    const earningsDisplay = document.getElementById('shift-earnings-display');
    
    if (revenueDisplay) revenueDisplay.textContent = formatCurrency(revenue);
    if (earningsDisplay) earningsDisplay.textContent = formatCurrency(earnings);
}

// –§–ª–∞–≥ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–æ–∫
let isSubmittingShift = false;

async function handleShiftSubmit(e) {
    console.log('=== –û–ë–†–ê–ë–û–¢–ß–ò–ö –°–û–•–†–ê–ù–ï–ù–ò–Ø –°–ú–ï–ù–´ –í–´–ó–í–ê–ù ===');
    console.log('Event:', e);
    
    e.preventDefault();
    
    // –û–±—ä—è–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –±–ª–æ–∫–µ try-catch
    let user;
    
    // –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–∞–∂–∞—Ç–∏–π
    if (isSubmittingShift) {
        console.log('‚ö†Ô∏è –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —É–∂–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ');
        return;
    }
    
    isSubmittingShift = true;
    console.log('üîí –ë–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –Ω–∞–∂–∞—Ç–∏—è');
    
    console.log('preventDefault() –≤—ã–ø–æ–ª–Ω–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º—É –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
    const form = e.target;
    if (!form.checkValidity()) {
        console.log('‚ùå –§–æ—Ä–º–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é');
        form.reportValidity();
        isSubmittingShift = false;
        return;
    }
    console.log('‚úÖ –§–æ—Ä–º–∞ –ø—Ä–æ—à–ª–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—é');
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Supabase
    console.log('–ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    try {
        console.log('–í—ã–∑—ã–≤–∞–µ–º supabase.auth.getUser()...');
        const userResult = await Promise.race([
            supabase.auth.getUser(),
            new Promise((_, reject) => setTimeout(() => reject(new Error('–¢–∞–π–º–∞—É—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')), 5000))
        ]);
        
        console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userResult);
        
        const { data: { user: authUser }, error: userError } = userResult;
        
        if (!authUser || userError || !authUser.id) {
            console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
            showMessage('–û—à–∏–±–∫–∞', '–°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ.');
            isSubmittingShift = false;
            return;
        }
        console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω:', authUser.id);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        const actualUser = authUser || currentUser;
        if (!actualUser || !actualUser.id) {
            console.error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', { authUser, currentUser });
            showMessage('–û—à–∏–±–∫–∞', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.');
            isSubmittingShift = false;
            return;
        }
        
        console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', actualUser.id);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
        user = actualUser;
    } catch (error) {
        console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        
        // –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é currentUser
        if (currentUser && currentUser.id) {
            console.log('‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é currentUser:', currentUser.id);
            user = currentUser;
        } else {
            showMessage('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ' + error.message);
            isSubmittingShift = false;
            return;
        }
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    const finalUser = user;
    console.log('–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–º–µ–Ω—ã:', finalUser.id);
    
    const shiftData = {
        user_id: finalUser.id, // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        shift_date: document.getElementById('shift-date').value,
        is_workday: document.querySelector('input[name="workday"]:checked').value === 'true',
        venue_id: document.getElementById('shift-venue').value || null,
        fixed_payout: parseFloat(document.getElementById('shift-payout').value) || 0,
        tips: parseFloat(document.getElementById('shift-tips').value) || 0
    };
    
    console.log('–î–∞–Ω–Ω—ã–µ —Å–º–µ–Ω—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', shiftData);
    
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∏—Ç–æ–≥–∏
    let revenue = 0;
    let earnings = shiftData.fixed_payout + shiftData.tips;
    const shiftProducts = [];
    
    if (shiftData.is_workday && shiftData.venue_id) {
        // –†–∞–±–æ—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ —Å –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è
        const venueProducts = products.filter(product => product.venue_id === shiftData.venue_id);
        console.log('–ü—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏:', venueProducts);
        console.log('–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã:', products);
        
        venueProducts.forEach(product => {
            // –ò—â–µ–º —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–º–µ–Ω—ã, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
            const shiftModal = document.getElementById('shift-modal');
            let input = shiftModal.querySelector(`[data-product-id="${product.id}"]`);
            
            if (!input) {
                // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ ID
                input = document.getElementById(`product-${product.id}`);
                console.log(`–ü–æ–∏—Å–∫ –ø–æ ID product-${product.id}:`, input);
            }
            
            if (!input) {
                // –ü–æ–∏—Å–∫ —Å—Ä–µ–¥–∏ –≤—Å–µ—Ö input —Å –∫–ª–∞—Å—Å–æ–º product-input –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
                const allInputs = shiftModal.querySelectorAll('.product-input');
                console.log('–í—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ input.product-input –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ:', allInputs);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ö –∞—Ç—Ä–∏–±—É—Ç—ã
                allInputs.forEach((inp, index) => {
                    console.log(`Input ${index}:`, {
                        id: inp.id,
                        'data-product-id': inp.getAttribute('data-product-id'),
                        value: inp.value,
                        element: inp
                    });
                });
            }
            
            console.log(`–ü–æ–∏—Å–∫ input –¥–ª—è –ø—Ä–æ–¥—É–∫—Ç–∞ ${product.name} (id: ${product.id}):`);
            console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–π input:', input);
            console.log('–ó–Ω–∞—á–µ–Ω–∏–µ input:', input?.value);
            
            const quantity = parseInt(input?.value) || 0;
            console.log(`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è ${product.name}: ${quantity}`);
            
            if (quantity > 0) {
                const productRevenue = quantity * product.price_per_unit;
                revenue += productRevenue;
                
                const commission = product.commission_type === 'fixed' 
                    ? product.commission_value
                    : product.price_per_unit * (product.commission_value / 100);
                const productEarnings = quantity * commission;
                earnings += productEarnings;
                
                const productData = {
                    product_id: product.id,
                    quantity: quantity,
                    price_snapshot: product.price_per_unit,
                    commission_snapshot: commission
                };
                
                shiftProducts.push(productData);
                console.log(`–î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–¥—É–∫—Ç –≤ —Å–º–µ–Ω—É:`, productData);
            }
        });
    } else {
        console.log('–ù–µ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å –∏–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ –∑–∞–≤–µ–¥–µ–Ω–∏–µ. is_workday:', shiftData.is_workday, 'venue_id:', shiftData.venue_id);
    }
    
    shiftData.revenue_generated = revenue;
    shiftData.earnings = earnings;
    
    console.log('–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–º–µ–Ω—ã:', shiftData);
    console.log('–ü—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', shiftProducts);
    
    try {
        let shiftId;
        
        if (editingShift && editingShift.id) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–π —Å–º–µ–Ω—ã –µ—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID
            if (!editingShift.id || editingShift.id === 'undefined') {
                console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Å–º–µ–Ω—ã:', editingShift);
                showMessage('–û—à–∏–±–∫–∞', '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Å–º–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
                return;
            }
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–º–µ–Ω—É
            const { error } = await supabase
                .from('shifts')
                .update(shiftData)
                .eq('id', editingShift.id);
            
            if (error) throw error;
            shiftId = editingShift.id;
            
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
            await supabase
                .from('shift_products')
                .delete()
                .eq('shift_id', shiftId);
        } else {
            // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–º–µ–Ω—ã - —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–º–µ–Ω—ã —Å —Ç–∞–∫–∏–º–∏ –∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
            let query = supabase
                .from('shifts')
                .select('id')
                .eq('user_id', shiftData.user_id)
                .eq('shift_date', shiftData.shift_date);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É venue_id —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω
            if (shiftData.venue_id) {
                query = query.eq('venue_id', shiftData.venue_id);
            } else {
                query = query.is('venue_id', null);
            }
            
            const { data: existingShift, error: checkError } = await query.maybeSingle();
            
            if (checkError) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–º–µ–Ω:', checkError);
                throw checkError;
            }
            
            if (existingShift) {
                const errorMessage = shiftData.venue_id 
                    ? '–°–º–µ–Ω–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ —ç—Ç—É –¥–∞—Ç—É —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–º–µ–Ω—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –¥–∞—Ç—É.'
                    : '–°–º–µ–Ω–∞ –Ω–∞ —ç—Ç—É –¥–∞—Ç—É —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–º–µ–Ω—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –¥–∞—Ç—É.';
                showMessage('–û—à–∏–±–∫–∞', errorMessage);
                return;
            }
            
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å–º–µ–Ω—É
            const { data, error } = await supabase
                .from('shifts')
                .insert(shiftData)
                .select()
                .single();
            
            if (error) throw error;
            shiftId = data.id;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã —Å–º–µ–Ω—ã
        if (shiftProducts.length > 0) {
            const shiftProductsData = shiftProducts.map(sp => ({
                ...sp,
                shift_id: shiftId
            }));
            
            console.log('–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã —Å–º–µ–Ω—ã:', shiftProductsData);
            
            const { data: savedProducts, error } = await supabase
                .from('shift_products')
                .insert(shiftProductsData)
                .select();
            
            if (error) {
                console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å–º–µ–Ω—ã:', error);
                throw error;
            }
            
            console.log('–ü—Ä–æ–¥—É–∫—Ç—ã —Å–º–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:', savedProducts);
        } else {
            console.log('–ù–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è');
        }
        
        console.log('‚úÖ –°–ú–ï–ù–ê –£–°–ü–ï–®–ù–û –°–û–•–†–ê–ù–ï–ù–ê! –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ...');
        closeAllModals();
        console.log('‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ —Å–º–µ–Ω...');
        await loadShiftsOptimized();
        console.log('‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ...');
        showMessage('–£—Å–ø–µ—Ö', editingShift ? '–°–º–µ–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞' : '–°–º–µ–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞');
        console.log('‚úÖ –ü–†–û–¶–ï–°–° –°–û–•–†–ê–ù–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–º–µ–Ω—ã:', error);
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if (error.message && error.message.includes('unique constraint')) {
            if (error.message.includes('unique_user_venue_date')) {
                showMessage('–û—à–∏–±–∫–∞', '–°–º–µ–Ω–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ —ç—Ç—É –¥–∞—Ç—É —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–º–µ–Ω—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –¥–∞—Ç—É.');
            } else {
                showMessage('–û—à–∏–±–∫–∞', '–î–∞–Ω–Ω—ã–µ –Ω–∞—Ä—É—à–∞—é—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π.');
            }
        } else if (error.message && error.message.includes('not-null constraint')) {
            showMessage('–û—à–∏–±–∫–∞', '–ù–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö.');
        } else {
            showMessage('–û—à–∏–±–∫–∞', error.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–º–µ–Ω—ã');
        }
    } finally {
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –Ω–∞–∂–∞—Ç–∏—è
        isSubmittingShift = false;
        console.log('üîì –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –Ω–∞–∂–∞—Ç–∏—è');
    }
}

async function editShift(shift) {
    console.log('üìù –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–º–µ–Ω—É:', shift.id);
    await openShiftModal(shift);
}

async function deleteShift() {
    if (!editingShift || !editingShift.id || editingShift.id === 'undefined') {
        console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å–º–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', editingShift);
        showMessage('–û—à–∏–±–∫–∞', '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å–º–µ–Ω–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
        return;
    }
    
    try {
        const { error } = await supabase
            .from('shifts')
            .delete()
            .eq('id', editingShift.id);
        
        if (error) throw error;
        
        closeAllModals();
        await loadShiftsOptimized();
        showMessage('–£—Å–ø–µ—Ö', '–°–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∞');
        
    } catch (error) {
        showMessage('–û—à–∏–±–∫–∞', error.message);
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–∑–∏—Ü–∏–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è
async function loadVenueProducts(venueId) {
    console.log('üè¢ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –∑–∞–≤–µ–¥–µ–Ω–∏—è:', venueId);
    
    const productsList = document.getElementById('venue-products-list');
    if (!productsList) {
        console.error('–≠–ª–µ–º–µ–Ω—Ç venue-products-list –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }
    
    try {
        const { data, error } = await supabase
            .from('venue_products')
            .select('*')
            .eq('venue_id', venueId)
            .order('name');
        
        if (error) throw error;
        
        if (data && data.length > 0) {
            productsList.innerHTML = '';
            data.forEach(product => {
                const productItem = document.createElement('div');
                productItem.className = 'venue-product-item';
                productItem.innerHTML = `
                    <div class="venue-product-info">
                        <div class="venue-product-name">${product.name}</div>
                        <div class="venue-product-details">
                            ${formatCurrency(product.price_per_unit)} ‚Ä¢ 
                            ${product.commission_type === 'fixed' 
                                ? `${formatCurrency(product.commission_value)} —Ñ–∏–∫—Å`
                                : `${product.commission_value}%`
                            }
                        </div>
                    </div>
                    <div class="venue-product-actions">
                        <button type="button" class="btn btn-secondary" onclick="editVenueProduct('${product.id}', '${venueId}')">
                            ‚úèÔ∏è
                        </button>
                        <button type="button" class="btn btn-danger" onclick="deleteVenueProduct('${product.id}', '${venueId}')">
                            üóëÔ∏è
                        </button>
                    </div>
                `;
                productsList.appendChild(productItem);
            });
        } else {
            productsList.innerHTML = '<p class="empty-message">–£ –∑–∞–≤–µ–¥–µ–Ω–∏—è –ø–æ–∫–∞ –Ω–µ—Ç –ø–æ–∑–∏—Ü–∏–π</p>';
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–∑–∏—Ü–∏–π –∑–∞–≤–µ–¥–µ–Ω–∏—è:', error);
        productsList.innerHTML = '<p class="empty-message">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–∑–∏—Ü–∏–π</p>';
    }
}

// –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è –∑–∞–≤–µ–¥–µ–Ω–∏–π
function openVenueModal(venue = null) {
    console.log('openVenueModal –≤—ã–∑–≤–∞–Ω–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º:', {
        venue: venue,
        venueType: typeof venue,
        venueIsNull: venue === null,
        venueIsUndefined: venue === undefined,
        venueId: venue?.id,
        venueName: venue?.name,
        isValidId: venue?.id && venue.id !== 'undefined'
    });
    
    editingVenue = venue;
    
    const modal = document.getElementById('venue-modal');
    const title = document.getElementById('venue-modal-title');
    const deleteBtn = document.getElementById('delete-venue');
    
    if (venue && venue.id) {
        // –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è
        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏—è
        if (!venue.id || venue.id === 'undefined') {
            console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', venue);
            showMessage('–û—à–∏–±–∫–∞', '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–≤–µ–¥–µ–Ω–∏–π.');
            return;
        }
        
        title.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ';
        deleteBtn.classList.remove('hidden');
        document.getElementById('venue-name').value = venue.name || '';
        document.getElementById('venue-payout').value = venue.default_fixed_payout || 0;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è
        loadVenueProducts(venue.id);
    } else {
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è (venue = null –∏–ª–∏ venue –±–µ–∑ id)
        console.log('–û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è');
        title.textContent = '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ';
        deleteBtn.classList.add('hidden');
        document.getElementById('venue-form').reset();
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º editingVenue –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ
        editingVenue = null;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è
        const productsList = document.getElementById('venue-products-list');
        productsList.innerHTML = '<p class="empty-message">–ü–æ–∑–∏—Ü–∏–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è</p>';
    }
    
    modal.classList.remove('hidden');
    modal.style.display = 'flex';
}

// –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏—è–º–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è
async function addVenueProduct() {
    if (!editingVenue || !editingVenue.id) {
        showMessage('–û—à–∏–±–∫–∞', '–°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ');
        return;
    }
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ–¥—É–∫—Ç–∞ —Å –ø—Ä–∏–≤—è–∑–∫–æ–π –∫ –∑–∞–≤–µ–¥–µ–Ω–∏—é
    editingProduct = { venue_id: editingVenue.id };
    openProductModal(editingProduct);
}

async function editVenueProduct(productId, venueId) {
    console.log('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏:', productId, '–∑–∞–≤–µ–¥–µ–Ω–∏—è:', venueId);
    
    try {
        const { data, error } = await supabase
            .from('venue_products')
            .select('*')
            .eq('id', productId)
            .single();
        
        if (error) throw error;
        
        if (data) {
            editingProduct = data;
            openProductModal(data);
        }
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–∑–∏—Ü–∏–∏:', error);
        showMessage('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏');
    }
}

async function deleteVenueProduct(productId, venueId) {
    console.log('–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏:', productId, '–∑–∞–≤–µ–¥–µ–Ω–∏—è:', venueId);
    
    if (!confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –ø–æ–∑–∏—Ü–∏—é?')) {
        return;
    }
    
    try {
        const { error } = await supabase
            .from('venue_products')
            .delete()
            .eq('id', productId);
        
        if (error) throw error;
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–∑–∏—Ü–∏–π –∑–∞–≤–µ–¥–µ–Ω–∏—è
        await loadVenueProducts(venueId);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        await loadProducts();
        clearDataCache();
        
        showMessage('–£—Å–ø–µ—Ö', '–ü–æ–∑–∏—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞');
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏:', error);
        showMessage('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é');
    }
}

function editVenue(venueId) {
    console.log('editVenue –≤—ã–∑–≤–∞–Ω–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º:', {
        venueId: venueId,
        venueIdType: typeof venueId,
        venuesCount: venues.length,
        venuesIds: venues.map(v => ({ id: v.id, type: typeof v.id }))
    });
    
    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∑–∞–≤–µ–¥–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ ID
    let venue = venues.find(v => v.id === venueId);
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
    if (!venue && typeof venueId === 'string') {
        venue = venues.find(v => String(v.id) === venueId);
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –∫–∞–∫ —á–∏—Å–ª–æ
    if (!venue && !isNaN(venueId)) {
        venue = venues.find(v => v.id === parseInt(venueId));
    }
    
    if (venue) {
        console.log('–ù–∞–π–¥–µ–Ω–æ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', venue);
        openVenueModal(venue);
    } else {
        console.error('–ó–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:', {
            searchId: venueId,
            availableVenues: venues
        });
        showMessage('–û—à–∏–±–∫–∞', '–ó–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–≤–µ–¥–µ–Ω–∏–π.');
    }
}

async function handleVenueSubmit(e) {
    e.preventDefault();
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Supabase
    const { data: { user }, error: userError } = await supabase.auth.getUser();
    if (!user || userError || !user.id) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
        showMessage('–û—à–∏–±–∫–∞', '–°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ.');
        return;
    }
    
    console.log('–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è:', user.id);
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
    const venueNameElement = document.getElementById('venue-name');
    const venuePayoutElement = document.getElementById('venue-payout');
    
    console.log('–≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã:', {
        venueNameElement: !!venueNameElement,
        venuePayoutElement: !!venuePayoutElement
    });
    
    if (!venueNameElement || !venuePayoutElement) {
        showMessage('–û—à–∏–±–∫–∞', '–≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ–æ—Ä–º—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    const venueName = venueNameElement.value?.trim();
    const venuePayout = parseFloat(venuePayoutElement.value) || 0;
    
    console.log('–ó–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ–æ—Ä–º—ã:', {
        venueName: venueName,
        venueNameType: typeof venueName,
        venueNameLength: venueName?.length,
        venuePayout: venuePayout,
        venuePayoutType: typeof venuePayout
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–æ
    if (!venueName || venueName === 'undefined') {
        showMessage('–û—à–∏–±–∫–∞', '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è');
        return;
    }
    
    const venueData = {
        user_id: user.id,
        name: venueName,
        default_fixed_payout: venuePayout
    };
    
    console.log('–î–∞–Ω–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', venueData);
    
    try {
        if (editingVenue && editingVenue.id) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è –µ—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID
            if (!editingVenue.id || editingVenue.id === 'undefined') {
                console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∑–∞–≤–µ–¥–µ–Ω–∏—è:', editingVenue);
                showMessage('–û—à–∏–±–∫–∞', '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∑–∞–≤–µ–¥–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
                return;
            }
            
            console.log('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è —Å ID:', editingVenue.id);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏–µ
            const { error } = await supabase
                .from('venues')
                .update(venueData)
                .eq('id', editingVenue.id);
            
            if (error) throw error;
        } else {
            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ handleProductSubmit)
            console.log('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è');
            
            const { error } = await supabase
                .from('venues')
                .insert(venueData);
            
            if (error) throw error;
        }
        
        closeAllModals();
        await loadVenues();
        // –û—á–∏—â–∞–µ–º –∫—ç—à –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏–π
        clearDataCache();
        showMessage('–£—Å–ø–µ—Ö', editingVenue ? '–ó–∞–≤–µ–¥–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ' : '–ó–∞–≤–µ–¥–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ');
        
    } catch (error) {
        console.error('–ü–æ–ª–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –∑–∞–≤–µ–¥–µ–Ω–∏–µ–º:', error);
        showMessage('–û—à–∏–±–∫–∞', `–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: ${error.message}`);
    }
}

function confirmDeleteVenue(venueId) {
    console.log('confirmDeleteVenue –≤—ã–∑–≤–∞–Ω–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º:', venueId);
    
    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∑–∞–≤–µ–¥–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ ID
    let venue = venues.find(v => v.id === venueId);
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
    if (!venue && typeof venueId === 'string') {
        venue = venues.find(v => String(v.id) === venueId);
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –∫–∞–∫ —á–∏—Å–ª–æ
    if (!venue && !isNaN(venueId)) {
        venue = venues.find(v => v.id === parseInt(venueId));
    }
    
    if (venue && confirm(`–£–¥–∞–ª–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ "${venue.name}"?`)) {
        deleteVenueById(venueId);
    } else if (!venue) {
        console.error('–ó–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', venueId);
        showMessage('–û—à–∏–±–∫–∞', '–ó–∞–≤–µ–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
    }
}

async function deleteVenueById(venueId) {
    try {
        const { error } = await supabase
            .from('venues')
            .delete()
            .eq('id', venueId);
        
        if (error) throw error;
        
        await loadVenues();
        // –û—á–∏—â–∞–µ–º –∫—ç—à –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è
        clearDataCache();
        showMessage('–£—Å–ø–µ—Ö', '–ó–∞–≤–µ–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
        
    } catch (error) {
        showMessage('–û—à–∏–±–∫–∞', error.message);
    }
}

async function deleteVenue() {
    if (!editingVenue || !editingVenue.id || editingVenue.id === 'undefined') {
        console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', editingVenue);
        showMessage('–û—à–∏–±–∫–∞', '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
        return;
    }
    
    try {
        const { error } = await supabase
            .from('venues')
            .delete()
            .eq('id', editingVenue.id);
        
        if (error) throw error;
        
        closeAllModals();
        await loadVenues();
        // –û—á–∏—â–∞–µ–º –∫—ç—à –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è
        clearDataCache();
        showMessage('–£—Å–ø–µ—Ö', '–ó–∞–≤–µ–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
        
    } catch (error) {
        showMessage('–û—à–∏–±–∫–∞', error.message);
    }
}

// –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –¥–ª—è –ø–æ–∑–∏—Ü–∏–π
function openProductModal(product = null) {
    editingProduct = product;
    const modal = document.getElementById('product-modal');
    const title = document.getElementById('product-modal-title');
    const deleteBtn = document.getElementById('delete-product');
    
    if (product) {
        title.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é';
        deleteBtn.classList.remove('hidden');
        document.getElementById('product-name').value = product.name;
        document.getElementById('product-price').value = product.price_per_unit;
        document.getElementById('commission-type').value = product.commission_type;
        document.getElementById('commission-value').value = product.commission_value;
    } else {
        title.textContent = '–î–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é';
        deleteBtn.classList.add('hidden');
        document.getElementById('product-form').reset();
    }
    
    updateCommissionLabel();
    modal.classList.remove('hidden');
    modal.style.display = 'flex';
}

function editProduct(productId) {
    console.log('editProduct –≤—ã–∑–≤–∞–Ω–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º:', {
        productId: productId,
        productIdType: typeof productId,
        productsCount: products.length
    });
    
    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç —Å —É—á–µ—Ç–æ–º —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ ID
    let product = products.find(p => p.id === productId);
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
    if (!product && typeof productId === 'string') {
        product = products.find(p => String(p.id) === productId);
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –∫–∞–∫ —á–∏—Å–ª–æ
    if (!product && !isNaN(productId)) {
        product = products.find(p => p.id === parseInt(productId));
    }
    
    if (product) {
        console.log('–ù–∞–π–¥–µ–Ω –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', product);
        openProductModal(product);
    } else {
        console.error('–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω:', {
            searchId: productId,
            availableProducts: products
        });
        showMessage('–û—à–∏–±–∫–∞', '–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤.');
    }
}

function updateCommissionLabel() {
    const type = document.getElementById('commission-type').value;
    const label = document.getElementById('commission-label');
    label.textContent = type === 'fixed' ? '–°—É–º–º–∞ –∫–æ–º–∏—Å—Å–∏–∏:' : '–ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏:';
}

async function handleProductSubmit(e) {
    e.preventDefault();
    
    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Supabase
    const { data: { user }, error: userError } = await supabase.auth.getUser();
    if (!user || userError || !user.id) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError);
        showMessage('–û—à–∏–±–∫–∞', '–°–µ—Å—Å–∏—è —É—Å—Ç–∞—Ä–µ–ª–∞. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –∑–∞–Ω–æ–≤–æ.');
        return;
    }
    
    console.log('–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–∏:', user.id);
    
    // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
    const productNameElement = document.getElementById('product-name');
    const productPriceElement = document.getElementById('product-price');
    const commissionTypeElement = document.getElementById('commission-type');
    const commissionValueElement = document.getElementById('commission-value');
    
    if (!productNameElement || !productPriceElement || !commissionTypeElement || !commissionValueElement) {
        showMessage('–û—à–∏–±–∫–∞', '–≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –ø–æ–∑–∏—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ–æ—Ä–º—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π
    const productName = productNameElement.value?.trim();
    const productPrice = parseFloat(productPriceElement.value) || 0;
    const commissionType = commissionTypeElement.value;
    const commissionValue = parseFloat(commissionValueElement.value) || 0;
    
    console.log('–ó–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ–æ—Ä–º—ã –ø–æ–∑–∏—Ü–∏–∏:', {
        productName: productName,
        productPrice: productPrice,
        commissionType: commissionType,
        commissionValue: commissionValue
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ
    if (!productName || productName === 'undefined') {
        showMessage('–û—à–∏–±–∫–∞', '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏');
        return;
    }
    
    // –î–ª—è –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –Ω—É–∂–Ω–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫ –∑–∞–≤–µ–¥–µ–Ω–∏—é
    if (!editingProduct || !editingProduct.venue_id) {
        showMessage('–û—à–∏–±–∫–∞', '–ù–µ —É–∫–∞–∑–∞–Ω–æ –∑–∞–≤–µ–¥–µ–Ω–∏–µ –¥–ª—è –ø–æ–∑–∏—Ü–∏–∏. –î–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ–∑–∏—Ü–∏–∏ —á–µ—Ä–µ–∑ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è.');
        return;
    }

    const productData = {
        venue_id: editingProduct.venue_id, // –ü—Ä–∏–≤—è–∑–∫–∞ –∫ –∑–∞–≤–µ–¥–µ–Ω–∏—é
        name: productName,
        price_per_unit: productPrice,
        commission_type: commissionType,
        commission_value: commissionValue
    };
    
    console.log('–î–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', productData);
    
    try {
        if (editingProduct && editingProduct.id) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞ –µ—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID
            if (!editingProduct.id || editingProduct.id === 'undefined') {
                console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø—Ä–æ–¥—É–∫—Ç–∞:', editingProduct);
                showMessage('–û—à–∏–±–∫–∞', '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –ø—Ä–æ–¥—É–∫—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
                return;
            }
            
                    const { error } = await supabase
            .from('venue_products')
            .update(productData)
            .eq('id', editingProduct.id);
            
            if (error) throw error;
        } else {
                    const { error } = await supabase
            .from('venue_products')
            .insert(productData);
            
            if (error) throw error;
        }
        
        closeAllModals();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–∑–∏—Ü–∏–π –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è (–µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ)
        if (editingVenue && editingVenue.id) {
            await loadVenueProducts(editingVenue.id);
        }
        
        await loadProducts();
        // –û—á–∏—â–∞–µ–º –∫—ç—à –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        clearDataCache();
        showMessage('–£—Å–ø–µ—Ö', editingProduct ? '–ü–æ–∑–∏—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞' : '–ü–æ–∑–∏—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞');
        
    } catch (error) {
        showMessage('–û—à–∏–±–∫–∞', error.message);
    }
}

function confirmDeleteProduct(productId) {
    console.log('confirmDeleteProduct –≤—ã–∑–≤–∞–Ω–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º:', productId);
    
    // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ø—Ä–æ–¥—É–∫—Ç —Å —É—á–µ—Ç–æ–º —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ ID
    let product = products.find(p => p.id === productId);
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –∫–∞–∫ —Å—Ç—Ä–æ–∫—É
    if (!product && typeof productId === 'string') {
        product = products.find(p => String(p.id) === productId);
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –∫–∞–∫ —á–∏—Å–ª–æ
    if (!product && !isNaN(productId)) {
        product = products.find(p => p.id === parseInt(productId));
    }
    
    if (product && confirm(`–£–¥–∞–ª–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é "${product.name}"?`)) {
        deleteProductById(productId);
    } else if (!product) {
        console.error('–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', productId);
        showMessage('–û—à–∏–±–∫–∞', '–ü—Ä–æ–¥—É–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
}

async function deleteProductById(productId) {
    try {
        const { error } = await supabase
            .from('venue_products')
            .delete()
            .eq('id', productId);
        
        if (error) throw error;
        
        await loadProducts();
        // –û—á–∏—â–∞–µ–º –∫—ç—à –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
        clearDataCache();
        showMessage('–£—Å–ø–µ—Ö', '–ü–æ–∑–∏—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞');
        
    } catch (error) {
        showMessage('–û—à–∏–±–∫–∞', error.message);
    }
}

async function deleteProduct() {
    if (!editingProduct || !editingProduct.id || editingProduct.id === 'undefined') {
        console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:', editingProduct);
        showMessage('–û—à–∏–±–∫–∞', '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
        return;
    }
    
    try {
        const { error } = await supabase
            .from('venue_products')
            .delete()
            .eq('id', editingProduct.id);
        
        if (error) throw error;
        
        closeAllModals();
        await loadProducts();
        // –û—á–∏—â–∞–µ–º –∫—ç—à –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
        clearDataCache();
        showMessage('–£—Å–ø–µ—Ö', '–ü–æ–∑–∏—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞');
        
    } catch (error) {
        showMessage('–û—à–∏–±–∫–∞', error.message);
    }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏
function loadSettings() {
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ loadUserData
}

// –û—Ç—á–µ—Ç—ã
function generateReports() {
    updateReportsMonth();
    
    const monthShifts = shifts.filter(shift => {
        const shiftDate = new Date(shift.shift_date);
        return shiftDate.getMonth() === currentMonth.getMonth() && 
               shiftDate.getFullYear() === currentMonth.getFullYear();
    });
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
    const salesStats = {};
    let totalRevenue = 0;
    let totalPayout = 0;
    let totalTips = 0;
    let grossEarnings = 0;
    
    monthShifts.forEach(shift => {
        if (shift.is_workday) {
            totalRevenue += shift.revenue_generated;
            totalPayout += shift.fixed_payout;
            totalTips += shift.tips;
            grossEarnings += shift.earnings;
            
            if (shift.shift_products) {
                shift.shift_products.forEach(sp => {
                    const productName = sp.venue_products?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
                    if (!salesStats[productName]) {
                        salesStats[productName] = {
                            quantity: 0,
                            revenue: 0
                        };
                    }
                    salesStats[productName].quantity += sp.quantity;
                    salesStats[productName].revenue += sp.quantity * sp.price_snapshot;
                });
            }
        }
    });
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø—Ä–æ–¥–∞–∂
    const salesContainer = document.getElementById('sales-stats');
    salesContainer.innerHTML = '';
    
    Object.entries(salesStats).forEach(([productName, stats]) => {
        const statElement = document.createElement('div');
        statElement.className = 'stat-item';
        statElement.innerHTML = `
            <span class="stat-label">${productName}:</span>
            <span class="stat-value">${stats.quantity} —à—Ç. (${formatCurrency(stats.revenue)})</span>
        `;
        salesContainer.appendChild(statElement);
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    document.getElementById('total-revenue').textContent = formatCurrency(totalRevenue);
    document.getElementById('total-payout').textContent = formatCurrency(totalPayout);
    document.getElementById('total-tips').textContent = formatCurrency(totalTips);
    document.getElementById('gross-earnings').textContent = formatCurrency(grossEarnings);
    
    calculateNetEarnings();
}

function calculateNetEarnings() {
    const grossEarnings = parseFloat(document.getElementById('gross-earnings').textContent.replace(/[^\d.-]/g, '')) || 0;
    const bonus = parseFloat(document.getElementById('bonus-input').value) || 0;
    const netEarnings = grossEarnings + bonus;
    
    document.getElementById('net-earnings').textContent = formatCurrency(netEarnings);
}

function exportData() {
    // –ü—Ä–æ—Å—Ç–æ–π —ç–∫—Å–ø–æ—Ä—Ç –≤ CSV
    let csv = '–î–∞—Ç–∞,–ó–∞–≤–µ–¥–µ–Ω–∏–µ,–°—Ç–∞—Ç—É—Å,–í—ã—Ä—É—á–∫–∞,–í—ã—Ö–æ–¥,–ß–∞–µ–≤—ã–µ,–ó–∞—Ä–∞–±–æ—Ç–æ–∫\n';
    
    shifts.forEach(shift => {
        csv += `${shift.shift_date},${shift.venues?.name || ''},${shift.is_workday ? '–†–∞–±–æ—á–∏–π' : '–í—ã—Ö–æ–¥–Ω–æ–π'},${shift.revenue_generated},${shift.fixed_payout},${shift.tips},${shift.earnings}\n`;
    });
    
    const blob = new Blob([csv], { type: 'text/csv' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `shifts_${currentMonth.getFullYear()}_${currentMonth.getMonth() + 1}.csv`;
    a.click();
    window.URL.revokeObjectURL(url);
}

// –£—Ç–∏–ª–∏—Ç—ã
async function getCurrentUser() {
    const maxRetries = 3;
    const baseTimeout = 8000; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–π —Ç–∞–π–º–∞—É—Ç –¥–æ 8 —Å–µ–∫—É–Ω–¥
    
    console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å retry –º–µ—Ö–∞–Ω–∏–∑–º–æ–º...');
    
    for (let attempt = 1; attempt <= maxRetries; attempt++) {
        try {
            const timeout = baseTimeout * Math.pow(1.5, attempt - 1); // –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Ç–∞–π–º–∞—É—Ç
            console.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ ${attempt}/${maxRetries}, —Ç–∞–π–º–∞—É—Ç: ${timeout}ms`);
            
            const startTime = Date.now();
            
            const getUserPromise = supabase.auth.getUser();
            const timeoutPromise = new Promise((_, reject) => 
                setTimeout(() => reject(new Error(`–¢–∞–π–º–∞—É—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (${timeout}ms)`)), timeout)
            );
            
            const { data: { user }, error } = await Promise.race([getUserPromise, timeoutPromise]);
            
            const elapsed = Date.now() - startTime;
            console.log(`üìã –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞–Ω—è–ª ${elapsed}ms`);
            
            if (error) {
                // –†–∞–∑–ª–∏—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –æ—à–∏–±–∫–∏ –æ—Ç –ø—Ä–æ—Å—Ç–æ–≥–æ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                if (error.message.includes('Invalid JWT') || error.message.includes('JWT')) {
                    console.log('‚ÑπÔ∏è –ù–µ—Ç –≤–∞–ª–∏–¥–Ω–æ–≥–æ JWT —Ç–æ–∫–µ–Ω–∞ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)');
                    return null; // –ù–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º –¥–ª—è –æ—à–∏–±–æ–∫ JWT
                } else if (error.message.includes('403') || error.message.includes('Forbidden')) {
                    console.log('‚ÑπÔ∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)');
                    return null; // –ù–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º –¥–ª—è –æ—à–∏–±–æ–∫ –¥–æ—Å—Ç—É–ø–∞
                } else {
                    throw error; // –ü–æ–≤—Ç–æ—Ä—è–µ–º –¥–ª—è –¥—Ä—É–≥–∏—Ö –æ—à–∏–±–æ–∫
                }
            }
            
            if (!user || !user.id) {
                console.log('‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω)');
                return null;
            }
            
            console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –Ω–∞ –ø–æ–ø—ã—Ç–∫–µ ${attempt}:`, user.id);
            return user;
            
        } catch (error) {
            const isTimeout = error.message.includes('–¢–∞–π–º–∞—É—Ç');
            const isNetworkError = error.message.includes('NetworkError') || error.message.includes('fetch');
            
            if (attempt === maxRetries) {
                // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞
                if (isTimeout) {
                    console.error(`‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ç–∞–π–º–∞—É—Ç –ø–æ—Å–ª–µ ${maxRetries} –ø–æ–ø—ã—Ç–æ–∫`);
                    console.error('üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã: –º–µ–¥–ª–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ, –ø—Ä–æ–±–ª–µ–º—ã —Å Supabase, –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤');
                } else {
                    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
                }
                return null;
            } else {
                // –ù–µ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞
                const delay = 1000 * attempt; // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
                console.warn(`‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${attempt} –Ω–µ—É–¥–∞—á–Ω–∞: ${error.message}`);
                
                if (isTimeout || isNetworkError) {
                    console.log(`‚è≥ –ñ–¥–µ–º ${delay}ms –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π...`);
                    await new Promise(resolve => setTimeout(resolve, delay));
                } else {
                    // –î–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è–µ–º
                    console.error('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏:', error);
                    return null;
                }
            }
        }
    }
    
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫');
    return null;
}

function formatCurrency(amount) {
    return `${(amount || 0).toLocaleString('ru-RU', { minimumFractionDigits: 0, maximumFractionDigits: 2 })} ${currency}`;
}

function updateCurrencyDisplay() {
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–∞–ª—é—Ç—ã
    document.querySelectorAll('.stat-value').forEach(el => {
        const text = el.textContent;
        const amount = text.match(/[\d\s,.-]+/);
        if (amount) {
            el.textContent = text.replace(/[‚ÇΩ$‚Ç¨p.]+/, currency);
        }
    });
}

function closeAllModals() {
    try {
        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –∏—Ö
        const modals = document.querySelectorAll('.modal');
        modals.forEach(modal => {
            modal.classList.add('hidden');
            modal.style.display = 'none'; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞
        });
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        editingShift = null;
        editingVenue = null;
        editingProduct = null;
        
        console.log('–í—Å–µ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã');
    } catch (error) {
        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω (–≤–æ–∑–º–æ–∂–Ω–æ DOM –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω):', error.message);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –¢–û–õ–¨–ö–û –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
function closeMessageModal() {
    try {
        const messageModal = document.getElementById('message-modal');
        if (messageModal) {
            messageModal.classList.add('hidden');
            messageModal.style.display = 'none';
            console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
        }
    } catch (error) {
        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error.message);
    }
}

function showMessage(title, text) {
    document.getElementById('message-title').textContent = title;
    document.getElementById('message-text').textContent = text;
    const modal = document.getElementById('message-modal');
    modal.classList.remove('hidden');
    modal.style.display = 'flex';
}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–ª—É—à–∞—Ç–µ–ª–µ–π –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
function setupAuthStateListener() {
    if (!supabase) return;
    
    console.log('üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º auth state listener');
    
    supabase.auth.onAuthStateChange(async (event, session) => {
        console.log('Auth state changed:', event, session?.user?.id);
        console.log('üîç onAuthStateChange —Ñ–ª–∞–≥–∏:', { isInitialized, isInitializing });
        
        // –ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º SIGNED_IN
        // —á—Ç–æ–±—ã –Ω–µ –¥—É–±–ª–∏—Ä–æ–≤–∞—Ç—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
        if (event === 'SIGNED_IN') {
            console.log('üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º SIGNED_IN —Å–æ–±—ã—Ç–∏–µ');
            console.log('üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ —Å–æ–±—ã—Ç–∏—è:', session?.user?.id);
            console.log('üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', currentUser?.id);
            if (!isInitialized) {
                console.log('‚ö†Ô∏è –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º SIGNED_IN');
                return;
            }
            
            // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–º–µ–Ω–∏–ª—Å—è
            console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–º–µ–Ω—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', {
                currentUserId: currentUser?.id,
                sessionUserId: session?.user?.id,
                isEqual: currentUser?.id === session?.user?.id
            });
            
            if (currentUser?.id !== session?.user?.id) {
                console.log('üéØ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª –≤ —Å–∏—Å—Ç–µ–º—É:', session.user.id);
                
                // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û —Å–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ù–ï–ú–ï–î–õ–ï–ù–ù–û –ø—Ä–∏ –≤—Ö–æ–¥–µ
                console.log('üö® –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –°–ö–†–´–¢–ò–ï –ó–ê–ì–†–£–ó–ö–ò –ü–†–ò –í–•–û–î–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø');
                hideLoading();
                showMainApp();
                
                currentUser = session.user;
                
                // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Å—Å–∏–∏
                startSessionCheck();
                
                // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                try {
                    await loadUserData();
                    showMainApp();
                } catch (error) {
                    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å–º–µ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
                    
                    // –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: —Å–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
                    console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (onAuthStateChange)...');
                    hideLoading();
                    showMainApp();
                    
                    showMessage('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                    console.log('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É –≤ onAuthStateChange');
                }
            } else {
                console.log('‚ö†Ô∏è –¢–æ—Ç –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É');
                console.log('üîß –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û —Å–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–ª—è —Ç–æ–≥–æ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                hideLoading();
                showMainApp();
            }
            
        } else if (event === 'SIGNED_OUT') {
            console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
            
            // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Å—Å–∏–∏
            stopSessionCheck();
            
            // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
            currentUser = null;
            venues = [];
            products = [];
            shifts = [];
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            isInitialized = false;
            isInitializing = false;
            
            showAuthScreen();
            
        } else if (event === 'TOKEN_REFRESHED') {
            console.log('–¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω');
            // –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ —Ç–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ª–æ–≥–∏–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        }
    });
}



// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
function clearDataCache() {
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –¥–∞–Ω–Ω—ã—Ö');
    localStorage.removeItem('cached_venues');
    localStorage.removeItem('cached_products');
}

// –î–æ–±–∞–≤–ª—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
window.diagnoseConnection = diagnoseConnection;
window.refreshUserData = refreshUserData;
window.testUserAuth = async function() {
    console.log('=== –¢–ï–°–¢ –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø ===');
    try {
        const result = await getCurrentUser();
        console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç:', result);
        return result;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        return null;
    }
};

window.retryDataLoad = async function() {
    console.log('=== –ü–û–í–¢–û–†–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–• ===');
    if (currentUser) {
        await refreshUserData();
        console.log('–î–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    } else {
        console.log('–ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }
};

window.forceReload = function() {
    console.log('=== –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê –°–¢–†–ê–ù–ò–¶–´ ===');
    localStorage.removeItem('cached_venues');
    localStorage.removeItem('cached_products');
    location.reload();
};

window.checkAppState = function() {
    console.log('=== –°–û–°–¢–û–Ø–ù–ò–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===');
    console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', currentUser);
    console.log('–ó–∞–≤–µ–¥–µ–Ω–∏—è:', venues.length);
    console.log('–ü—Ä–æ–¥—É–∫—Ç—ã:', products.length);
    console.log('–°–º–µ–Ω—ã:', shifts.length);
    console.log('–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü:', currentMonth);
    console.log('Supabase –∫–ª–∏–µ–Ω—Ç:', !!supabase);
    console.log('–§–ª–∞–≥–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', { isInitializing, isInitialized });
    console.log('–≠–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä—ã—Ç:', document.getElementById('loading-screen')?.classList.contains('hidden'));
    console.log('–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–æ:', !document.getElementById('main-app')?.classList.contains('hidden'));
    console.log('–≠–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–∫–∞–∑–∞–Ω:', !document.getElementById('auth-screen')?.classList.contains('hidden'));
};

window.forceInitialize = function() {
    console.log('=== –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===');
    isInitializing = false;
    isInitialized = false;
    initializeApp().catch(error => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
    });
};

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–º–µ–Ω
window.diagnoseShifts = async function() {
    console.log('üîç === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ú–ï–ù ===');
    
    console.log('1Ô∏è‚É£ –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö:');
    console.log('  - currentUser:', currentUser);
    console.log('  - shifts –º–∞—Å—Å–∏–≤:', shifts);
    console.log('  - venues –º–∞—Å—Å–∏–≤:', venues);
    console.log('  - currentMonth:', currentMonth);
    
    console.log('2Ô∏è‚É£ DOM —ç–ª–µ–º–µ–Ω—Ç—ã:');
    const container = document.getElementById('shifts-list');
    console.log('  - shifts-list –Ω–∞–π–¥–µ–Ω:', !!container);
    console.log('  - shifts-list HTML –¥–ª–∏–Ω–∞:', container?.innerHTML?.length || 0);
    console.log('  - shifts-list –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã:', container?.children?.length || 0);
    
    if (currentUser?.id) {
        console.log('3Ô∏è‚É£ –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:');
        try {
            const startOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth(), 1);
            const endOfMonth = new Date(currentMonth.getFullYear(), currentMonth.getMonth() + 1, 0);
            
            const { data: directShifts, error } = await supabase
                .from('shifts')
                .select('*')
                .eq('user_id', currentUser.id)
                .gte('shift_date', startOfMonth.toISOString().split('T')[0])
                .lte('shift_date', endOfMonth.toISOString().split('T')[0])
                .order('shift_date', { ascending: false });
                
            console.log('  - –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', directShifts);
            console.log('  - –ü—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å –æ—à–∏–±–∫–∞:', error);
            console.log('  - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–º–µ–Ω –≤ –ë–î:', directShifts?.length || 0);
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏—è —Ç–æ–∂–µ
            const { data: directVenues, error: venuesError } = await supabase
                .from('venues')
                .select('*')
                .eq('user_id', currentUser.id);
                
            console.log('  - –ó–∞–≤–µ–¥–µ–Ω–∏—è –≤ –ë–î:', directVenues);
            console.log('  - –ó–∞–≤–µ–¥–µ–Ω–∏—è –æ—à–∏–±–∫–∞:', venuesError);
            
        } catch (error) {
            console.error('  - –û—à–∏–±–∫–∞ –ø—Ä—è–º–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞:', error);
        }
    }
    
    console.log('4Ô∏è‚É£ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä:');
    renderShiftsList();
    
    console.log('‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
};

// –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ü–û–ó–ò–¶–ò–ô –í –°–ú–ï–ù–ê–•
window.testShiftProductsDisplay = async function() {
    console.log('üß™ === –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ü–û–ó–ò–¶–ò–ô ===');
    
    if (!currentUser) {
        console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
        await restoreAuth();
        if (!currentUser) {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é');
            return;
        }
    }
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    console.log('üìä –î–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:');
    console.log('  - –°–º–µ–Ω—ã:', shifts.length);
    console.log('  - –ü—Ä–æ–¥—É–∫—Ç—ã:', products.length);
    console.log('  - –ó–∞–≤–µ–¥–µ–Ω–∏—è:', venues.length);
    
    if (shifts.length === 0) {
        console.log('‚ö†Ô∏è –ù–µ—Ç —Å–º–µ–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è');
        return;
    }
    
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫...');
    await renderShiftsList();
    
    console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–º–µ–Ω—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ');
};

// –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò
window.restoreAuth = async function() {
    console.log('üîê === –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò ===');
    
    try {
        console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é...');
        const { data: session, error } = await supabase.auth.getSession();
        
        console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç getSession:', { 
            session: !!session?.session, 
            user: !!session?.session?.user,
            error: error 
        });
        
        if (session?.session?.user) {
            console.log('‚úÖ –ê–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è –Ω–∞–π–¥–µ–Ω–∞! –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
            currentUser = session.session.user;
            
            console.log('2Ô∏è‚É£ –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
            isInitialized = false;
            isInitializing = false;
            
            console.log('üìÖ –°–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–∞—Ç—É –Ω–∞ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü...');
            currentMonth = new Date();
            console.log('üìÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–∞—Ç–∞:', currentMonth.toLocaleDateString('ru-RU', { month: 'long', year: 'numeric' }));
            
            console.log('3Ô∏è‚É£ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
            await initializeApp();
            
            console.log('4Ô∏è‚É£ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω...');
            hideLoading();
            showMainApp();
            
            console.log('‚úÖ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ê!');
            return true;
            
        } else {
            console.log('‚ùå –ê–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
            hideLoading();
            showAuthScreen();
            return false;
        }
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', error);
        hideLoading();
        showAuthScreen();
        return false;
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
async function refreshUserData() {
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    
    if (!currentUser?.id) {
        console.log('‚ö†Ô∏è –ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö');
        return;
    }
    
    try {
        // –û—á–∏—â–∞–µ–º –∫—ç—à
        clearDataCache();
        
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        await loadVenuesOptimized();
        await loadProductsOptimized();
        await loadShiftsOptimized();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updateVenueSelects();
        renderVenuesList();
        renderProductsList();
        
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
        showMessage('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    }
}