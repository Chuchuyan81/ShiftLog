const { test, expect } = require('@playwright/test');
const { loginUser, logoutUser, expectUserLoggedIn, expectUserLoggedOut, TEST_CREDENTIALS } = require('./helpers/auth');

test.describe('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏', () => {
  
  test.beforeEach(async ({ page }) => {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
    await page.goto('/');
  });

  test('–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏', async ({ page }) => {
    console.log('üß™ –¢–µ—Å—Ç: –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
    
    // –í—ã–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    await loginUser(page);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
    await expectUserLoggedIn(page);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    await expect(page.locator('.nav-btn[data-screen="shifts"]')).toBeVisible();
    await expect(page.locator('.nav-btn[data-screen="reports"]')).toBeVisible();
    await expect(page.locator('.nav-btn[data-screen="settings"]')).toBeVisible();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É (–¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å "–ñ—É—Ä–Ω–∞–ª")
    await expect(page.locator('.nav-btn[data-screen="shifts"]')).toHaveClass(/active/);
  });

  test('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –Ω–µ–≤–µ—Ä–Ω—ã–º email', async ({ page }) => {
    console.log('üß™ –¢–µ—Å—Ç: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –Ω–µ–≤–µ—Ä–Ω—ã–º email');
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await page.waitForSelector('#loading-screen', { state: 'hidden', timeout: 10000 });
    await expect(page.locator('#auth-screen')).toBeVisible();
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Å –Ω–µ–≤–µ—Ä–Ω—ã–º email
    await page.fill('#email', 'invalid-email@nonexistent.com');
    await page.fill('#password', TEST_CREDENTIALS.password);
    
    // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–í–æ–π—Ç–∏"
    await page.click('button[type="submit"]');
    
    // –ñ–¥–µ–º –Ω–µ–±–æ–ª—å—à—É—é –ø–∞—É–∑—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–∫–∏
    await page.waitForTimeout(3000);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–ª—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await expectUserLoggedOut(page);
    
    // –ú–æ–∂–µ–º –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –æ–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è
    // (–∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏)
  });

  test('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –Ω–µ–≤–µ—Ä–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º', async ({ page }) => {
    console.log('üß™ –¢–µ—Å—Ç: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Å –Ω–µ–≤–µ—Ä–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º');
    
    await page.waitForSelector('#loading-screen', { state: 'hidden', timeout: 10000 });
    await expect(page.locator('#auth-screen')).toBeVisible();
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Å –Ω–µ–≤–µ—Ä–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
    await page.fill('#email', TEST_CREDENTIALS.email);
    await page.fill('#password', 'wrong-password');
    
    await page.click('button[type="submit"]');
    await page.waitForTimeout(3000);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–ª—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await expectUserLoggedOut(page);
  });

  test('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏ –í—Ö–æ–¥/–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', async ({ page }) => {
    console.log('üß™ –¢–µ—Å—Ç: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    
    await page.waitForSelector('#loading-screen', { state: 'hidden', timeout: 10000 });
    await expect(page.locator('#auth-screen')).toBeVisible();
    
    // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∞–∫—Ç–∏–≤–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ "–í—Ö–æ–¥"
    await expect(page.locator('[data-tab="login"]')).toHaveClass(/active/);
    await expect(page.locator('#confirm-password-group')).toHaveClass(/hidden/);
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
    await page.click('[data-tab="register"]');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    await expect(page.locator('[data-tab="register"]')).toHaveClass(/active/);
    await expect(page.locator('[data-tab="login"]')).not.toHaveClass(/active/);
    await expect(page.locator('#confirm-password-group')).not.toHaveClass(/hidden/);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    await expect(page.locator('#auth-form button[type="submit"]')).toHaveText('–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è');
    
    // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ "–í—Ö–æ–¥"
    await page.click('[data-tab="login"]');
    
    await expect(page.locator('[data-tab="login"]')).toHaveClass(/active/);
    await expect(page.locator('#confirm-password-group')).toHaveClass(/hidden/);
    await expect(page.locator('#auth-form button[type="submit"]')).toHaveText('–í–æ–π—Ç–∏');
  });

  test('–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã', async ({ page }) => {
    console.log('üß™ –¢–µ—Å—Ç: –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã');
    
    // –°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è
    await loginUser(page);
    await expectUserLoggedIn(page);
    
    // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã
    await logoutUser(page);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ —ç–∫—Ä–∞–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await expectUserLoggedOut(page);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–æ—Ä–º–∞ –æ—á–∏—â–µ–Ω–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    await expect(page.locator('#email')).toHaveValue('');
    await expect(page.locator('#password')).toHaveValue('');
  });

  test('–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç—ã—Ö –ø–æ–ª–µ–π', async ({ page }) => {
    console.log('üß™ –¢–µ—Å—Ç: –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç—ã—Ö –ø–æ–ª–µ–π');
    
    await page.waitForSelector('#loading-screen', { state: 'hidden', timeout: 10000 });
    await expect(page.locator('#auth-screen')).toBeVisible();
    
    // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ —Å –ø—É—Å—Ç—ã–º–∏ –ø–æ–ª—è–º–∏
    await page.click('button[type="submit"]');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML5 –≤–∞–ª–∏–¥–∞—Ü–∏—é
    const emailField = page.locator('#email');
    const passwordField = page.locator('#password');
    
    // –ü–æ–ª—è –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å –∞—Ç—Ä–∏–±—É—Ç required
    await expect(emailField).toHaveAttribute('required');
    await expect(passwordField).toHaveAttribute('required');
    
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await expectUserLoggedOut(page);
  });

  test('–í–∞–ª–∏–¥–∞—Ü–∏—è email —Ñ–æ—Ä–º–∞—Ç–∞', async ({ page }) => {
    console.log('üß™ –¢–µ—Å—Ç: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ email');
    
    await page.waitForSelector('#loading-screen', { state: 'hidden', timeout: 10000 });
    
    // –í–≤–æ–¥–∏–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π email
    await page.fill('#email', 'invalid-email-format');
    await page.fill('#password', 'password123');
    
    await page.click('button[type="submit"]');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º HTML5 –≤–∞–ª–∏–¥–∞—Ü–∏—é email
    const emailField = page.locator('#email');
    await expect(emailField).toHaveAttribute('type', 'email');
    
    // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –æ—Å—Ç–∞—Ç—å—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await expectUserLoggedOut(page);
  });

  test('–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏', async ({ page }) => {
    console.log('üß™ –¢–µ—Å—Ç: –ë–∞–∑–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏
    await expect(page.locator('#loading-screen')).toBeVisible();
    
    // –ñ–¥–µ–º —Å–∫—Ä—ã—Ç–∏—è —ç–∫—Ä–∞–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∏
    await page.waitForSelector('#loading-screen', { state: 'hidden', timeout: 10000 });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await expectUserLoggedOut(page);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    await expect(page.locator('h1')).toHaveText('–ñ—É—Ä–Ω–∞–ª –†–∞–±–æ—á–∏—Ö –°–º–µ–Ω');
    await expect(page.locator('#email')).toBeVisible();
    await expect(page.locator('#password')).toBeVisible();
    await expect(page.locator('button[type="submit"]')).toBeVisible();
    await expect(page.locator('#forgot-password-btn')).toBeVisible();
  });
}); 