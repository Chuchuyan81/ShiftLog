const { expect } = require('@playwright/test');

// –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const TEST_CREDENTIALS = {
  email: 'chuchuyan81@gmail.com',
  password: '123456'
};

/**
 * –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
 * @param {import('@playwright/test').Page} page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 */
async function loginUser(page) {
  console.log('üîê –ù–∞—á–∏–Ω–∞–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
  
  // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  await page.waitForSelector('#loading-screen', { state: 'visible' });
  await page.waitForSelector('#loading-screen', { state: 'hidden', timeout: 10000 });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —ç–∫—Ä–∞–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  await expect(page.locator('#auth-screen')).toBeVisible();
  
  // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∞–∫—Ç–∏–≤–Ω–∞ –≤–∫–ª–∞–¥–∫–∞ "–í—Ö–æ–¥"
  const loginTab = page.locator('[data-tab="login"]');
  await expect(loginTab).toHaveClass(/active/);
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  await page.fill('#email', TEST_CREDENTIALS.email);
  await page.fill('#password', TEST_CREDENTIALS.password);
  
  // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–í–æ–π—Ç–∏"
  await page.click('button[type="submit"]');
  
  // –ñ–¥–µ–º —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–ø–µ—Ä–µ—Ö–æ–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É —ç–∫—Ä–∞–Ω—É)
  await page.waitForSelector('#main-app', { state: 'visible', timeout: 15000 });
  await expect(page.locator('#auth-screen')).toBeHidden();
  
  console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
}

/**
 * –í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
 * @param {import('@playwright/test').Page} page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 */
async function logoutUser(page) {
  console.log('üö™ –í—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã...');
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  await page.click('[data-screen="settings"]');
  await page.waitForSelector('#settings-screen', { state: 'visible' });
  
  // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞
  await page.click('#logout-btn');
  
  // –ñ–¥–µ–º –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —ç–∫—Ä–∞–Ω—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  await page.waitForSelector('#auth-screen', { state: 'visible', timeout: 10000 });
  await expect(page.locator('#main-app')).toBeHidden();
  
  console.log('‚úÖ –í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ');
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
 * @param {import('@playwright/test').Page} page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 */
async function expectUserLoggedIn(page) {
  await expect(page.locator('#main-app')).toBeVisible();
  await expect(page.locator('#auth-screen')).toBeHidden();
  await expect(page.locator('.nav-bar')).toBeVisible();
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
 * @param {import('@playwright/test').Page} page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 */
async function expectUserLoggedOut(page) {
  await expect(page.locator('#auth-screen')).toBeVisible();
  await expect(page.locator('#main-app')).toBeHidden();
}

module.exports = {
  TEST_CREDENTIALS,
  loginUser,
  logoutUser,
  expectUserLoggedIn,
  expectUserLoggedOut
}; 