const { expect } = require('@playwright/test');

/**
 * –ñ–¥–µ–º –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 * @param {import('@playwright/test').Page} page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 * @param {string} modalId - ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 */
async function waitForModalOpen(page, modalId) {
  await page.waitForSelector(`#${modalId}`, { state: 'visible' });
  await expect(page.locator(`#${modalId}`)).toBeVisible();
  await expect(page.locator(`#${modalId}`)).not.toHaveClass(/hidden/);
}

/**
 * –ñ–¥–µ–º –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 * @param {import('@playwright/test').Page} page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 * @param {string} modalId - ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 */
async function waitForModalClose(page, modalId) {
  await page.waitForSelector(`#${modalId}.hidden`, { timeout: 5000 });
  await expect(page.locator(`#${modalId}`)).toHaveClass(/hidden/);
}

/**
 * –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–Ω–æ–ø–∫–æ–π X
 * @param {import('@playwright/test').Page} page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 * @param {string} modalId - ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 */
async function closeModalByX(page, modalId) {
  const closeButton = page.locator(`#${modalId} .modal-header .btn-icon`);
  await closeButton.click();
  await waitForModalClose(page, modalId);
}

/**
 * –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∫–ª–∏–∫–æ–º –≤–Ω–µ –µ–≥–æ –æ–±–ª–∞—Å—Ç–∏
 * @param {import('@playwright/test').Page} page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 * @param {string} modalId - ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
 */
async function closeModalByOutsideClick(page, modalId) {
  // –ö–ª–∏–∫–∞–µ–º –ø–æ overlay (—Ñ–æ–Ω—É –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞)
  await page.click(`#${modalId}`, { position: { x: 10, y: 10 } });
  await waitForModalClose(page, modalId);
}

/**
 * –î–æ–±–∞–≤–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
 * @param {import('@playwright/test').Page} page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 * @param {Object} venueData - –î–∞–Ω–Ω—ã–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è
 */
async function addVenue(page, venueData) {
  console.log(`üè¢ –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏–µ: ${venueData.name}`);
  
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è
  await page.click('#add-venue-btn');
  await waitForModalOpen(page, 'venue-modal');
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
  await page.fill('#venue-name', venueData.name);
  if (venueData.address) {
    await page.fill('#venue-address', venueData.address);
  }
  if (venueData.phone) {
    await page.fill('#venue-phone', venueData.phone);
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º
  await page.click('#venue-form button[type="submit"]');
  await waitForModalClose(page, 'venue-modal');
  
  // –ñ–¥–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞–≤–µ–¥–µ–Ω–∏–π
  await page.waitForTimeout(1000);
  
  console.log(`‚úÖ –ó–∞–≤–µ–¥–µ–Ω–∏–µ "${venueData.name}" –¥–æ–±–∞–≤–ª–µ–Ω–æ`);
}

/**
 * –î–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é —á–µ—Ä–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
 * @param {import('@playwright/test').Page} page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 * @param {Object} productData - –î–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏
 */
async function addProduct(page, productData) {
  console.log(`üçΩÔ∏è –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é: ${productData.name}`);
  
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
  await page.click('#add-product-btn');
  await waitForModalOpen(page, 'product-modal');
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
  await page.fill('#product-name', productData.name);
  await page.fill('#product-price', productData.price.toString());
  
  // –í—ã–±–∏—Ä–∞–µ–º —Ç–∏–ø –∫–æ–º–∏—Å—Å–∏–∏
  await page.selectOption('#commission-type', productData.commissionType);
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä –∫–æ–º–∏—Å—Å–∏–∏
  await page.fill('#commission-value', productData.commissionValue.toString());
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º
  await page.click('#product-form button[type="submit"]');
  await waitForModalClose(page, 'product-modal');
  
  // –ñ–¥–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–∑–∏—Ü–∏–π
  await page.waitForTimeout(1000);
  
  console.log(`‚úÖ –ü–æ–∑–∏—Ü–∏—è "${productData.name}" –¥–æ–±–∞–≤–ª–µ–Ω–∞`);
}

/**
 * –î–æ–±–∞–≤–∏—Ç—å —Å–º–µ–Ω—É —á–µ—Ä–µ–∑ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
 * @param {import('@playwright/test').Page} page - –°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—Ä–∞—É–∑–µ—Ä–∞
 * @param {Object} shiftData - –î–∞–Ω–Ω—ã–µ —Å–º–µ–Ω—ã
 */
async function addShift(page, shiftData) {
  console.log(`üìÖ –î–æ–±–∞–≤–ª—è–µ–º —Å–º–µ–Ω—É –Ω–∞ ${shiftData.date}`);
  
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–º–µ–Ω—ã
  await page.click('#add-shift-btn');
  await waitForModalOpen(page, 'shift-modal');
  
  // –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞—Ç—É
  await page.fill('#shift-date', shiftData.date);
  
  if (shiftData.isWorkday) {
    // –í—ã–±–∏—Ä–∞–µ–º "–†–∞–±–æ—á–∏–π –¥–µ–Ω—å"
    await page.check('input[name="workday"][value="work"]');
    
    // –í—ã–±–∏—Ä–∞–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏–µ
    if (shiftData.venueId) {
      await page.selectOption('#shift-venue', shiftData.venueId);
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã—Ö–æ–¥
    if (shiftData.fixedPayout) {
      await page.fill('#shift-payout', shiftData.fixedPayout.toString());
    }
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —á–∞–π
    if (shiftData.tips) {
      await page.fill('#shift-tips', shiftData.tips.toString());
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
    if (shiftData.products && shiftData.products.length > 0) {
      for (const product of shiftData.products) {
        // –ö–ª–∏–∫–∞–µ–º "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∏—Ü–∏—é"
        const addProductBtn = page.locator('#products-container .btn-secondary').last();
        await addProductBtn.click();
        
        // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≥—Ä—É–ø–ø—É –ø–æ–∑–∏—Ü–∏–π
        const productGroups = page.locator('.product-group');
        const lastGroup = productGroups.last();
        
        // –í—ã–±–∏—Ä–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        await lastGroup.locator('select').selectOption(product.productId);
        await lastGroup.locator('input[type="number"]').fill(product.quantity.toString());
      }
    }
  } else {
    // –í—ã–±–∏—Ä–∞–µ–º "–í—ã—Ö–æ–¥–Ω–æ–π"
    await page.check('input[name="workday"][value="off"]');
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º
  await page.click('#shift-form button[type="submit"]');
  await waitForModalClose(page, 'shift-modal');
  
  // –ñ–¥–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Å–º–µ–Ω
  await page.waitForTimeout(2000);
  
  console.log(`‚úÖ –°–º–µ–Ω–∞ –Ω–∞ ${shiftData.date} –¥–æ–±–∞–≤–ª–µ–Ω–∞`);
}

module.exports = {
  waitForModalOpen,
  waitForModalClose,
  closeModalByX,
  closeModalByOutsideClick,
  addVenue,
  addProduct,
  addShift
}; 